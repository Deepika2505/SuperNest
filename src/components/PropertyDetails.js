import React, {useState} from "react";
import { useLocation, useNavigate, useParams } from "react-router-dom";
import "./../styles/PropertyDetails.css";
import MapComponent from "./Map";

const PropertyDetails = ({navbarHeight}) => {
  const {name} = useParams();
  const location = useLocation();
  const navigate = useNavigate();
  const property = location.state?.property || {
    name: decodeURIComponent(name),
    location: new URLSearchParams(location.search).get("location") || "Unknown",
    price: "Data Missing",
    originalPrice: "Data Missing",
    amenities: [],
    images: [],
    phoneNumber: "Not available",
    reviews: ["No reviews available."],
  };

  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [visibleComments, setVisibleComments] = useState(3);

  const handlePrevImage = () => {
    setCurrentImageIndex((prevIndex) => 
      prevIndex === 0 ? property.images.length - 1 : prevIndex - 1
    );
  };

  const handleNextImage = () => {
    setCurrentImageIndex((prevIndex) => 
      prevIndex === property.images.length - 1 ? 0 : prevIndex + 1
    );
  };

  const handleShare = () => {
    navigator.clipboard.writeText(window.location.href);
    alert("Property link copied to clipboard!");
  };
  
  const handleRequestCallback = ({phoneNumber}) => {
    alert(`Requesting callback for ${property.phoneNumber}`);
  };

  const loadMoreComments = () => {
    const remainingComments =property.reviews.length - visibleComments;
    setVisibleComments((prev) => prev + Math.min(3,remainingComments));
  };

  const getRelativeTime = (dateString) => {
    const diff = Date.now() - new Date(dateString).getTime();
    const seconds = Math.floor(diff / 1000);
    if (seconds < 60) return `${seconds}s ago`;
    const minutes = Math.floor(seconds / 60);
    if (minutes < 60) return `${minutes}m ago`;
    const hours = Math.floor(minutes / 60);
    if (hours < 24) return `${hours}h ago`;
    const days = Math.floor(hours / 24);
    if (days < 30) return `${days}d ago`;
    const months = Math.floor(days / 30);
    if (months < 12) return `${months}mo ago`;
    const years = Math.floor(months / 12);
    return `${years}y ago`;
  };

  const getFeedback = (rating) => {
    if (rating >= 4.5) return "Excellent";
    if (rating >= 4) return "Great";
    if (rating >= 3) return "Good";
    if (rating >= 2) return "Average";
    return "Poor";
  };

  const getComplaintFeedback = (resolutionCount) => {
    if (resolutionCount >= 90) return "Excellent Resolution";
    if (resolutionCount >= 70) return "Good Resolution";
    return "Needs Improvement";
  };

  const displayedFeatures = property.amenities.slice(0, 3);
  const remaningFeatures = property.amenities.length - 3;

  const handleNextImageRoom = (e) => {
    e.stopPropagation();
    setCurrentImageIndex((prevIndex) =>
      prevIndex === property.rooms.images.length - 1 ? 0 : prevIndex + 1
    );
  };

  const handlePrevImageRoom = (e) => {
    e.stopPropagation();
    setCurrentImageIndex((prevIndex) =>
      prevIndex === 0 ? property.rooms.images.length - 1 : prevIndex - 1
    );
  };

  console.log("Property Data: ", property);

  return (
    <div className="property-details-container" style={{paddingTop: `${navbarHeight}px`}}>
      <div className="left-section">
        <div className="image-container">
          {property.isTopRated && 
            <div className="top-rated-badge">
              <svg width="94" height="24" viewBox="0 0 94 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="94" height="24" rx="4" fill="#1F70F5"/>
                <path d="M14.4503 13.1335L15.0337 11.2335L13.5003 10.0002H15.4003L16.0003 8.1335L16.6003 10.0002H18.5003L16.9503 11.2335L17.5337 13.1335L16.0003 11.9502L14.4503 13.1335ZM12.0003 19.3335V14.1835C11.5781 13.7168 11.2503 13.1835 11.017 12.5835C10.7837 11.9835 10.667 11.3446 10.667 10.6668C10.667 9.17794 11.1837 7.91683 12.217 6.8835C13.2503 5.85016 14.5114 5.3335 16.0003 5.3335C17.4892 5.3335 18.7503 5.85016 19.7837 6.8835C20.817 7.91683 21.3337 9.17794 21.3337 10.6668C21.3337 11.3446 21.217 11.9835 20.9837 12.5835C20.7503 13.1835 20.4225 13.7168 20.0003 14.1835V19.3335L16.0003 18.0002L12.0003 19.3335ZM16.0003 14.6668C17.1114 14.6668 18.0559 14.2779 18.8337 13.5002C19.6114 12.7224 20.0003 11.7779 20.0003 10.6668C20.0003 9.55572 19.6114 8.61127 18.8337 7.8335C18.0559 7.05572 17.1114 6.66683 16.0003 6.66683C14.8892 6.66683 13.9448 7.05572 13.167 7.8335C12.3892 8.61127 12.0003 9.55572 12.0003 10.6668C12.0003 11.7779 12.3892 12.7224 13.167 13.5002C13.9448 14.2779 14.8892 14.6668 16.0003 14.6668Z" fill="white"/>
                <path d="M35.068 8.08V9.184H32.356V16H31.072V9.184H28.36V8.08H35.068ZM37.5358 9.88C38.1198 9.88 38.6358 10.004 39.0838 10.252C39.5318 10.5 39.8798 10.86 40.1278 11.332C40.3838 11.796 40.5118 12.352 40.5118 13C40.5118 13.648 40.3838 14.208 40.1278 14.68C39.8798 15.144 39.5318 15.5 39.0838 15.748C38.6358 15.996 38.1198 16.12 37.5358 16.12C36.9518 16.12 36.4358 15.996 35.9878 15.748C35.5398 15.5 35.1878 15.144 34.9318 14.68C34.6758 14.208 34.5478 13.648 34.5478 13C34.5478 12.352 34.6758 11.796 34.9318 11.332C35.1878 10.86 35.5398 10.5 35.9878 10.252C36.4358 10.004 36.9518 9.88 37.5358 9.88ZM37.5358 10.888C37.1758 10.888 36.8678 10.972 36.6118 11.14C36.3638 11.3 36.1718 11.536 36.0358 11.848C35.8998 12.16 35.8318 12.544 35.8318 13C35.8318 13.448 35.8998 13.832 36.0358 14.152C36.1718 14.464 36.3638 14.704 36.6118 14.872C36.8678 15.032 37.1758 15.112 37.5358 15.112C37.8958 15.112 38.1998 15.032 38.4478 14.872C38.6958 14.704 38.8878 14.464 39.0238 14.152C39.1598 13.832 39.2278 13.448 39.2278 13C39.2278 12.544 39.1598 12.16 39.0238 11.848C38.8878 11.536 38.6958 11.3 38.4478 11.14C38.1998 10.972 37.8958 10.888 37.5358 10.888ZM41.8871 18.52V10H43.0271L43.1231 11.68L42.9551 11.476C43.0511 11.164 43.1991 10.888 43.3991 10.648C43.5991 10.408 43.8471 10.22 44.1431 10.084C44.4471 9.948 44.7791 9.88 45.1391 9.88C45.6271 9.88 46.0711 10.004 46.4711 10.252C46.8711 10.5 47.1871 10.856 47.4191 11.32C47.6511 11.776 47.7671 12.332 47.7671 12.988C47.7671 13.644 47.6471 14.208 47.4071 14.68C47.1751 15.144 46.8551 15.5 46.4471 15.748C46.0471 15.996 45.5991 16.12 45.1031 16.12C44.5911 16.12 44.1551 15.988 43.7951 15.724C43.4351 15.452 43.1791 15.108 43.0271 14.692L43.1711 14.488V18.52H41.8871ZM44.8271 15.076C45.3471 15.076 45.7511 14.892 46.0391 14.524C46.3351 14.156 46.4831 13.648 46.4831 13C46.4831 12.352 46.3391 11.844 46.0511 11.476C45.7631 11.1 45.3631 10.912 44.8511 10.912C44.5151 10.912 44.2191 11 43.9631 11.176C43.7151 11.344 43.5191 11.584 43.3751 11.896C43.2391 12.2 43.1711 12.568 43.1711 13C43.1711 13.424 43.2391 13.792 43.3751 14.104C43.5111 14.416 43.7031 14.656 43.9511 14.824C44.1991 14.992 44.4911 15.076 44.8271 15.076ZM56.2409 8.08C57.0889 8.08 57.7609 8.292 58.2569 8.716C58.7609 9.14 59.0129 9.712 59.0129 10.432C59.0129 11.176 58.7609 11.752 58.2569 12.16C57.7609 12.56 57.0889 12.76 56.2409 12.76L56.1209 12.832H54.2849V16H53.0129V8.08H56.2409ZM56.1449 11.764C56.6649 11.764 57.0489 11.66 57.2969 11.452C57.5529 11.236 57.6809 10.908 57.6809 10.468C57.6809 10.036 57.5529 9.712 57.2969 9.496C57.0489 9.28 56.6649 9.172 56.1449 9.172H54.2849V11.764H56.1449ZM56.9009 12.028L59.4809 16H58.0049L55.7969 12.532L56.9009 12.028ZM64.1234 12.148C64.1234 11.748 64.0114 11.44 63.7874 11.224C63.5714 11 63.2714 10.888 62.8874 10.888C62.5274 10.888 62.2194 10.972 61.9634 11.14C61.7074 11.308 61.5194 11.58 61.3994 11.956L60.3194 11.5C60.4714 11.012 60.7674 10.62 61.2074 10.324C61.6554 10.028 62.2314 9.88 62.9354 9.88C63.4154 9.88 63.8394 9.96 64.2074 10.12C64.5754 10.272 64.8634 10.504 65.0714 10.816C65.2874 11.128 65.3954 11.528 65.3954 12.016V14.692C65.3954 14.988 65.5434 15.136 65.8394 15.136C65.9834 15.136 66.1234 15.116 66.2594 15.076L66.1874 15.964C66.0034 16.052 65.7714 16.096 65.4914 16.096C65.2354 16.096 65.0034 16.052 64.7954 15.964C64.5954 15.868 64.4354 15.728 64.3154 15.544C64.2034 15.352 64.1474 15.116 64.1474 14.836V14.752L64.4114 14.74C64.3394 15.052 64.1914 15.312 63.9674 15.52C63.7434 15.72 63.4834 15.872 63.1874 15.976C62.8914 16.072 62.5914 16.12 62.2874 16.12C61.9114 16.12 61.5714 16.06 61.2674 15.94C60.9714 15.82 60.7354 15.64 60.5594 15.4C60.3914 15.152 60.3074 14.848 60.3074 14.488C60.3074 14.04 60.4514 13.672 60.7394 13.384C61.0354 13.096 61.4514 12.9 61.9874 12.796L64.3154 12.34L64.3034 13.24L62.6114 13.588C62.2754 13.652 62.0234 13.744 61.8554 13.864C61.6874 13.984 61.6034 14.16 61.6034 14.392C61.6034 14.616 61.6874 14.796 61.8554 14.932C62.0314 15.06 62.2634 15.124 62.5514 15.124C62.7514 15.124 62.9434 15.1 63.1274 15.052C63.3194 15.004 63.4914 14.928 63.6434 14.824C63.7954 14.712 63.9114 14.572 63.9914 14.404C64.0794 14.228 64.1234 14.02 64.1234 13.78V12.148ZM68.7768 8.236V14.2C68.7768 14.496 68.8528 14.712 69.0048 14.848C69.1648 14.984 69.3768 15.052 69.6408 15.052C69.8568 15.052 70.0448 15.02 70.2048 14.956C70.3648 14.884 70.5128 14.788 70.6488 14.668L70.9368 15.604C70.7528 15.764 70.5248 15.892 70.2528 15.988C69.9888 16.076 69.6928 16.12 69.3648 16.12C69.0208 16.12 68.7048 16.064 68.4168 15.952C68.1288 15.84 67.9048 15.66 67.7448 15.412C67.5848 15.156 67.5008 14.824 67.4928 14.416V8.596L68.7768 8.236ZM70.8408 10V11.008H66.3408V10H70.8408ZM74.5107 16.12C73.9107 16.12 73.3827 15.996 72.9267 15.748C72.4707 15.5 72.1147 15.144 71.8587 14.68C71.6107 14.208 71.4867 13.648 71.4867 13C71.4867 12.352 71.6107 11.796 71.8587 11.332C72.1147 10.86 72.4667 10.5 72.9147 10.252C73.3627 10.004 73.8707 9.88 74.4387 9.88C75.0227 9.88 75.5187 10 75.9267 10.24C76.3347 10.48 76.6467 10.808 76.8627 11.224C77.0787 11.64 77.1867 12.112 77.1867 12.64C77.1867 12.784 77.1827 12.92 77.1747 13.048C77.1667 13.176 77.1547 13.288 77.1387 13.384H72.3147V12.4H76.5747L75.9387 12.592C75.9387 12.048 75.8027 11.632 75.5307 11.344C75.2587 11.048 74.8867 10.9 74.4147 10.9C74.0707 10.9 73.7707 10.98 73.5147 11.14C73.2587 11.3 73.0627 11.54 72.9267 11.86C72.7907 12.172 72.7227 12.556 72.7227 13.012C72.7227 13.46 72.7947 13.84 72.9387 14.152C73.0827 14.464 73.2867 14.7 73.5507 14.86C73.8147 15.02 74.1267 15.1 74.4867 15.1C74.8867 15.1 75.2107 15.024 75.4587 14.872C75.7067 14.72 75.9027 14.508 76.0467 14.236L77.0667 14.716C76.9227 15.004 76.7267 15.256 76.4787 15.472C76.2387 15.68 75.9507 15.84 75.6147 15.952C75.2787 16.064 74.9107 16.12 74.5107 16.12ZM80.8722 16.12C80.3762 16.12 79.9242 15.996 79.5162 15.748C79.1162 15.5 78.8002 15.144 78.5682 14.68C78.3362 14.216 78.2202 13.66 78.2202 13.012C78.2202 12.34 78.3442 11.772 78.5922 11.308C78.8402 10.844 79.1722 10.492 79.5882 10.252C80.0042 10.004 80.4602 9.88 80.9562 9.88C81.4682 9.88 81.9002 10.02 82.2522 10.3C82.6042 10.58 82.8402 10.944 82.9602 11.392L82.8162 11.524V7.3H84.1002V16H82.9602L82.8642 14.368L83.0322 14.38C82.9762 14.74 82.8442 15.052 82.6362 15.316C82.4282 15.572 82.1682 15.772 81.8562 15.916C81.5522 16.052 81.2242 16.12 80.8722 16.12ZM81.1482 15.088C81.4922 15.088 81.7882 15 82.0362 14.824C82.2842 14.648 82.4762 14.4 82.6122 14.08C82.7482 13.76 82.8162 13.376 82.8162 12.928C82.8162 12.512 82.7482 12.156 82.6122 11.86C82.4762 11.556 82.2842 11.324 82.0362 11.164C81.7962 11.004 81.5162 10.924 81.1962 10.924C80.6602 10.924 80.2442 11.108 79.9482 11.476C79.6522 11.844 79.5042 12.352 79.5042 13C79.5042 13.648 79.6482 14.16 79.9362 14.536C80.2242 14.904 80.6282 15.088 81.1482 15.088Z" fill="white"/>
            </svg>
            </div>}
          <img
            src={property.images[currentImageIndex]}
            alt={`${name} - Image ${currentImageIndex + 1}`}
            className="property-image"
          />
          <button className="prev-button" onClick={handlePrevImage}>
            &lt;
          </button>
          <button className="next-button" onClick={handleNextImage}>
            &gt;
          </button>
          <div className="bottom-badges">
            <div className="badge gender-badge">
              {property.gender.includes("male") && property.gender.includes("female") ? "Unisex" : property.gender[0]}
            </div>
            <div className="badge occupancy-badge">
              {property.occupancy.join(", ")}
            </div>
          </div>
        </div>
        <h2>{property.name}</h2>
        <p>{property.area || "Unknown"}</p>
        <h3>Starts at</h3>
        <div className="price-section">
          <div className="current-price-box">
            <span className="current-price">₹{property.price}/month</span>
          </div>
          {property.originalPrice && property.originalPrice !== property.price && (
            <span className="original-price">₹{property.originalPrice}/month</span>
          )}
        </div>
        <h4>Services</h4>
        <div className="property-features">
            {property.amenities.length ? property.amenities.map((amenity, index) => (
              <div key={index} className="feature-box">{amenity}</div>
              )) : <div>No amenities listed.</div>}
        </div>
        <h4>Location:</h4>
        <MapComponent properties={property}/>
        {/* <iframe
          title="Property Location"
          src={`https://www.google.com/maps?q=${property.latitude},${property.longitude}&z=15&output=embed`}
          className="property-map"
        /> */}

        <h4>Available Rooms</h4>
        <div className="room-cards-container">
          {property.rooms.map((room,index) => (
            <div 
              className={`room-card ${!room.isAvailable ? "unavailable-room" : ""}`} 
              key={index}>
              <div className="room-images">
                <div className="image-container">
                  <div className="top-badges">
                  {room.isRecommended && 
                    <div className="recommended-badge">
                      <svg width="121" height="24" viewBox="0 0 121 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_b_1975_19509)">
<rect width="121" height="24" rx="4" fill="#0A0A0A"/>
<g filter="url(#filter1_d_1975_19509)">
<mask id="mask0_1975_19509" style={{maskType:'alpha'}} maskUnits="userSpaceOnUse" x="4" y="4" width="16" height="16">
<rect x="4" y="4" width="16" height="16" fill="#D9D9D9"/>
</mask>
<g mask="url(#mask0_1975_19509)">
<path d="M15.133 13.6667L17.6663 11.5L19.6663 11.6667L16.733 14.2167L17.5997 18L15.8997 16.9667L15.133 13.6667ZM13.5663 8.80004L12.8663 7.16671L13.633 5.33337L15.1663 8.95004L13.5663 8.80004ZM6.88301 18L7.96634 13.3167L4.33301 10.1667L9.13301 9.75004L10.9997 5.33337L12.8663 9.75004L17.6663 10.1667L14.033 13.3167L15.1163 18L10.9997 15.5167L6.88301 18Z" fill="#F7DC99"/>
</g>
</g>
<g filter="url(#filter2_d_1975_19509)">
<path d="M28.404 8.08C29.252 8.08 29.924 8.292 30.42 8.716C30.924 9.14 31.176 9.712 31.176 10.432C31.176 11.176 30.924 11.752 30.42 12.16C29.924 12.56 29.252 12.76 28.404 12.76L28.284 12.832H26.448V16H25.176V8.08H28.404ZM28.308 11.764C28.828 11.764 29.212 11.66 29.46 11.452C29.716 11.236 29.844 10.908 29.844 10.468C29.844 10.036 29.716 9.712 29.46 9.496C29.212 9.28 28.828 9.172 28.308 9.172H26.448V11.764H28.308ZM29.064 12.028L31.644 16H30.168L27.96 12.532L29.064 12.028ZM32.9985 16V8.08H38.7345V9.184H34.2825V11.464H37.7625V12.544H34.2825V14.896H38.9025V16H32.9985ZM46.8108 13.9C46.6508 14.38 46.4108 14.788 46.0908 15.124C45.7708 15.452 45.3948 15.7 44.9628 15.868C44.5308 16.036 44.0548 16.12 43.5348 16.12C42.7748 16.12 42.1148 15.956 41.5548 15.628C40.9948 15.3 40.5628 14.832 40.2588 14.224C39.9548 13.616 39.8028 12.888 39.8028 12.04C39.8028 11.192 39.9548 10.464 40.2588 9.856C40.5628 9.248 40.9948 8.78 41.5548 8.452C42.1148 8.124 42.7708 7.96 43.5228 7.96C44.0428 7.96 44.5108 8.032 44.9268 8.176C45.3508 8.32 45.7108 8.536 46.0068 8.824C46.3028 9.112 46.5308 9.472 46.6908 9.904L45.4788 10.444C45.3188 9.972 45.0868 9.628 44.7828 9.412C44.4788 9.188 44.0828 9.076 43.5948 9.076C43.1068 9.076 42.6788 9.192 42.3108 9.424C41.9428 9.656 41.6548 9.992 41.4468 10.432C41.2468 10.872 41.1468 11.408 41.1468 12.04C41.1468 12.664 41.2428 13.2 41.4348 13.648C41.6268 14.088 41.9028 14.424 42.2628 14.656C42.6228 14.888 43.0548 15.004 43.5588 15.004C44.0468 15.004 44.4668 14.88 44.8188 14.632C45.1788 14.376 45.4348 13.996 45.5868 13.492L46.8108 13.9ZM51.4979 7.96C52.2659 7.96 52.9299 8.124 53.4899 8.452C54.0499 8.78 54.4819 9.248 54.7859 9.856C55.0899 10.464 55.2419 11.192 55.2419 12.04C55.2419 12.888 55.0899 13.616 54.7859 14.224C54.4819 14.832 54.0499 15.3 53.4899 15.628C52.9299 15.956 52.2659 16.12 51.4979 16.12C50.7379 16.12 50.0779 15.956 49.5179 15.628C48.9579 15.3 48.5259 14.832 48.2219 14.224C47.9179 13.616 47.7659 12.888 47.7659 12.04C47.7659 11.192 47.9179 10.464 48.2219 9.856C48.5259 9.248 48.9579 8.78 49.5179 8.452C50.0779 8.124 50.7379 7.96 51.4979 7.96ZM51.4979 9.076C51.0019 9.076 50.5739 9.192 50.2139 9.424C49.8619 9.656 49.5899 9.992 49.3979 10.432C49.2059 10.872 49.1099 11.408 49.1099 12.04C49.1099 12.664 49.2059 13.2 49.3979 13.648C49.5899 14.088 49.8619 14.424 50.2139 14.656C50.5739 14.888 51.0019 15.004 51.4979 15.004C52.0019 15.004 52.4299 14.888 52.7819 14.656C53.1419 14.424 53.4179 14.088 53.6099 13.648C53.8019 13.2 53.8979 12.664 53.8979 12.04C53.8979 11.408 53.8019 10.872 53.6099 10.432C53.4179 9.992 53.1419 9.656 52.7819 9.424C52.4299 9.192 52.0019 9.076 51.4979 9.076ZM65.0113 8.08V16H63.8233V11.416L63.9193 9.232H63.9073L61.4953 16H60.4273L58.0153 9.232H58.0033L58.0993 11.416V16H56.9113V8.08H58.8193L60.4153 12.664L60.9673 14.548H60.9913L61.5553 12.664L63.1393 8.08H65.0113ZM75.2244 8.08V16H74.0364V11.416L74.1324 9.232H74.1204L71.7084 16H70.6404L68.2284 9.232H68.2164L68.3124 11.416V16H67.1244V8.08H69.0324L70.6284 12.664L71.1804 14.548H71.2044L71.7684 12.664L73.3524 8.08H75.2244ZM77.3376 16V8.08H83.0736V9.184H78.6216V11.464H82.1016V12.544H78.6216V14.896H83.2416V16H77.3376ZM91.2185 8.08V16H89.6945L86.6345 11.008L85.8665 9.604H85.8545L85.9025 10.888V16H84.7265V8.08H86.2385L89.2865 13.06L90.0665 14.488H90.0785L90.0305 13.192V8.08H91.2185ZM96.1184 8.08C97.3584 8.08 98.3224 8.424 99.0104 9.112C99.7064 9.792 100.054 10.768 100.054 12.04C100.054 13.312 99.7064 14.292 99.0104 14.98C98.3224 15.66 97.3584 16 96.1184 16H93.3224V8.08H96.1184ZM96.1184 14.908C96.9584 14.908 97.5984 14.66 98.0384 14.164C98.4864 13.66 98.7104 12.952 98.7104 12.04C98.7104 11.128 98.4864 10.424 98.0384 9.928C97.5984 9.424 96.9584 9.172 96.1184 9.172H94.6064V14.908H96.1184ZM101.719 16V8.08H107.455V9.184H103.003V11.464H106.483V12.544H103.003V14.896H107.623V16H101.719ZM111.904 8.08C113.144 8.08 114.108 8.424 114.796 9.112C115.492 9.792 115.84 10.768 115.84 12.04C115.84 13.312 115.492 14.292 114.796 14.98C114.108 15.66 113.144 16 111.904 16H109.108V8.08H111.904ZM111.904 14.908C112.744 14.908 113.384 14.66 113.824 14.164C114.272 13.66 114.496 12.952 114.496 12.04C114.496 11.128 114.272 10.424 113.824 9.928C113.384 9.424 112.744 9.172 111.904 9.172H110.392V14.908H111.904Z" fill="url(#paint0_linear_1975_19509)"/>
</g>
</g>
<defs>
<filter id="filter0_b_1975_19509" x="-12" y="-12" width="145" height="48" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feGaussianBlur in="BackgroundImageFix" stdDeviation="6"/>
<feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_1975_19509"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_backgroundBlur_1975_19509" result="shape"/>
</filter>
<filter id="filter1_d_1975_19509" x="0.333008" y="2.33337" width="23.333" height="20.6666" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="1"/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 0.890938 0 0 0 0 0.4925 0 0 0 0.3 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1975_19509"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1975_19509" result="shape"/>
</filter>
<filter id="filter2_d_1975_19509" x="21.1758" y="4.95996" width="98.6641" height="16.16" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="1"/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 0.890938 0 0 0 0 0.4925 0 0 0 0.3 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1975_19509"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1975_19509" result="shape"/>
</filter>
<linearGradient id="paint0_linear_1975_19509" x1="24" y1="12" x2="117" y2="12" gradientUnits="userSpaceOnUse">
<stop offset="0.595" stop-color="#F7DC99"/>
<stop offset="1" stop-color="#B68B24"/>
</linearGradient>
</defs>
                      </svg>
                    </div>
                  }
                  {room.isAvailable && 
                    <div className="available-badge">
                      <svg width="83" height="24" viewBox="0 0 83 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_b_1975_19514)">
<rect width="83" height="24" rx="4" fill="#1F70F5"/>
<mask id="mask0_1975_19514" style={{maskType:'alpha'}} maskUnits="userSpaceOnUse" x="6" y="4" width="16" height="16">
<rect x="6" y="4" width="16" height="16" fill="#D9D9D9"/>
</mask>
<g mask="url(#mask0_1975_19514)">
<path d="M13.0663 15.0667L17.7663 10.3667L16.833 9.43337L13.0663 13.2L11.1663 11.3L10.233 12.2334L13.0663 15.0667ZM13.9997 18.6667C13.0775 18.6667 12.2108 18.4917 11.3997 18.1417C10.5886 17.7917 9.88301 17.3167 9.28301 16.7167C8.68301 16.1167 8.20801 15.4112 7.85801 14.6C7.50801 13.7889 7.33301 12.9223 7.33301 12C7.33301 11.0778 7.50801 10.2112 7.85801 9.40004C8.20801 8.58893 8.68301 7.88337 9.28301 7.28337C9.88301 6.68337 10.5886 6.20837 11.3997 5.85837C12.2108 5.50837 13.0775 5.33337 13.9997 5.33337C14.9219 5.33337 15.7886 5.50837 16.5997 5.85837C17.4108 6.20837 18.1163 6.68337 18.7163 7.28337C19.3163 7.88337 19.7913 8.58893 20.1413 9.40004C20.4913 10.2112 20.6663 11.0778 20.6663 12C20.6663 12.9223 20.4913 13.7889 20.1413 14.6C19.7913 15.4112 19.3163 16.1167 18.7163 16.7167C18.1163 17.3167 17.4108 17.7917 16.5997 18.1417C15.7886 18.4917 14.9219 18.6667 13.9997 18.6667Z" fill="white"/>
</g>
<path d="M33.752 16H32.396L31.64 13.924H28.316L27.56 16H26.24L29.228 8.08H30.764L33.752 16ZM28.676 12.88H31.28L29.984 9.184L28.676 12.88ZM38.2274 10H39.5714L37.1834 16H35.7794L33.3794 10H34.7834L36.4874 14.884L38.2274 10ZM43.7535 12.148C43.7535 11.748 43.6415 11.44 43.4175 11.224C43.2015 11 42.9015 10.888 42.5175 10.888C42.1575 10.888 41.8495 10.972 41.5935 11.14C41.3375 11.308 41.1495 11.58 41.0295 11.956L39.9495 11.5C40.1015 11.012 40.3975 10.62 40.8375 10.324C41.2855 10.028 41.8615 9.88 42.5655 9.88C43.0455 9.88 43.4695 9.96 43.8375 10.12C44.2055 10.272 44.4935 10.504 44.7015 10.816C44.9175 11.128 45.0255 11.528 45.0255 12.016V14.692C45.0255 14.988 45.1735 15.136 45.4695 15.136C45.6135 15.136 45.7535 15.116 45.8895 15.076L45.8175 15.964C45.6335 16.052 45.4015 16.096 45.1215 16.096C44.8655 16.096 44.6335 16.052 44.4255 15.964C44.2255 15.868 44.0655 15.728 43.9455 15.544C43.8335 15.352 43.7775 15.116 43.7775 14.836V14.752L44.0415 14.74C43.9695 15.052 43.8215 15.312 43.5975 15.52C43.3735 15.72 43.1135 15.872 42.8175 15.976C42.5215 16.072 42.2215 16.12 41.9175 16.12C41.5415 16.12 41.2015 16.06 40.8975 15.94C40.6015 15.82 40.3655 15.64 40.1895 15.4C40.0215 15.152 39.9375 14.848 39.9375 14.488C39.9375 14.04 40.0815 13.672 40.3695 13.384C40.6655 13.096 41.0815 12.9 41.6175 12.796L43.9455 12.34L43.9335 13.24L42.2415 13.588C41.9055 13.652 41.6535 13.744 41.4855 13.864C41.3175 13.984 41.2335 14.16 41.2335 14.392C41.2335 14.616 41.3175 14.796 41.4855 14.932C41.6615 15.06 41.8935 15.124 42.1815 15.124C42.3815 15.124 42.5735 15.1 42.7575 15.052C42.9495 15.004 43.1215 14.928 43.2735 14.824C43.4255 14.712 43.5415 14.572 43.6215 14.404C43.7095 14.228 43.7535 14.02 43.7535 13.78V12.148ZM47.5373 8.992C47.2573 8.992 47.0413 8.924 46.8893 8.788C46.7453 8.644 46.6733 8.444 46.6733 8.188C46.6733 7.932 46.7453 7.736 46.8893 7.6C47.0413 7.464 47.2573 7.396 47.5373 7.396C47.8093 7.396 48.0173 7.464 48.1613 7.6C48.3133 7.736 48.3893 7.932 48.3893 8.188C48.3893 8.444 48.3133 8.644 48.1613 8.788C48.0173 8.924 47.8093 8.992 47.5373 8.992ZM48.1733 10V16H46.8893V10H48.1733ZM51.1903 7.3V14.32C51.1903 14.616 51.2423 14.82 51.3463 14.932C51.4503 15.044 51.6223 15.1 51.8623 15.1C52.0063 15.1 52.1263 15.092 52.2223 15.076C52.3263 15.052 52.4543 15.012 52.6063 14.956L52.4623 15.916C52.3263 15.98 52.1703 16.028 51.9943 16.06C51.8183 16.1 51.6423 16.12 51.4663 16.12C50.9303 16.12 50.5343 15.984 50.2783 15.712C50.0303 15.432 49.9063 15.004 49.9063 14.428V7.3H51.1903ZM56.932 12.148C56.932 11.748 56.82 11.44 56.596 11.224C56.38 11 56.08 10.888 55.696 10.888C55.336 10.888 55.028 10.972 54.772 11.14C54.516 11.308 54.328 11.58 54.208 11.956L53.128 11.5C53.28 11.012 53.576 10.62 54.016 10.324C54.464 10.028 55.04 9.88 55.744 9.88C56.224 9.88 56.648 9.96 57.016 10.12C57.384 10.272 57.672 10.504 57.88 10.816C58.096 11.128 58.204 11.528 58.204 12.016V14.692C58.204 14.988 58.352 15.136 58.648 15.136C58.792 15.136 58.932 15.116 59.068 15.076L58.996 15.964C58.812 16.052 58.58 16.096 58.3 16.096C58.044 16.096 57.812 16.052 57.604 15.964C57.404 15.868 57.244 15.728 57.124 15.544C57.012 15.352 56.956 15.116 56.956 14.836V14.752L57.22 14.74C57.148 15.052 57 15.312 56.776 15.52C56.552 15.72 56.292 15.872 55.996 15.976C55.7 16.072 55.4 16.12 55.096 16.12C54.72 16.12 54.38 16.06 54.076 15.94C53.78 15.82 53.544 15.64 53.368 15.4C53.2 15.152 53.116 14.848 53.116 14.488C53.116 14.04 53.26 13.672 53.548 13.384C53.844 13.096 54.26 12.9 54.796 12.796L57.124 12.34L57.112 13.24L55.42 13.588C55.084 13.652 54.832 13.744 54.664 13.864C54.496 13.984 54.412 14.16 54.412 14.392C54.412 14.616 54.496 14.796 54.664 14.932C54.84 15.06 55.072 15.124 55.36 15.124C55.56 15.124 55.752 15.1 55.936 15.052C56.128 15.004 56.3 14.928 56.452 14.824C56.604 14.712 56.72 14.572 56.8 14.404C56.888 14.228 56.932 14.02 56.932 13.78V12.148ZM63.2837 16.12C62.9317 16.12 62.6077 16.052 62.3117 15.916C62.0237 15.78 61.7797 15.592 61.5797 15.352C61.3797 15.104 61.2317 14.828 61.1357 14.524L61.2917 14.32L61.1957 16H60.0677V7.3H61.3517V11.512L61.2077 11.308C61.3597 10.892 61.6197 10.552 61.9877 10.288C62.3557 10.016 62.7997 9.88 63.3197 9.88C63.7997 9.88 64.2397 10.004 64.6397 10.252C65.0477 10.5 65.3677 10.856 65.5997 11.32C65.8317 11.784 65.9477 12.348 65.9477 13.012C65.9477 13.66 65.8277 14.216 65.5877 14.68C65.3557 15.144 65.0357 15.5 64.6277 15.748C64.2277 15.996 63.7797 16.12 63.2837 16.12ZM63.0077 15.088C63.5277 15.088 63.9317 14.904 64.2197 14.536C64.5157 14.16 64.6637 13.648 64.6637 13C64.6637 12.352 64.5197 11.844 64.2317 11.476C63.9437 11.108 63.5397 10.924 63.0197 10.924C62.6837 10.924 62.3917 11.012 62.1437 11.188C61.8957 11.356 61.6997 11.596 61.5557 11.908C61.4197 12.22 61.3517 12.592 61.3517 13.024C61.3517 13.448 61.4197 13.816 61.5557 14.128C61.6917 14.432 61.8837 14.668 62.1317 14.836C62.3877 15.004 62.6797 15.088 63.0077 15.088ZM68.5992 7.3V14.32C68.5992 14.616 68.6512 14.82 68.7552 14.932C68.8592 15.044 69.0312 15.1 69.2712 15.1C69.4152 15.1 69.5352 15.092 69.6312 15.076C69.7352 15.052 69.8632 15.012 70.0152 14.956L69.8712 15.916C69.7352 15.98 69.5792 16.028 69.4032 16.06C69.2272 16.1 69.0512 16.12 68.8752 16.12C68.3392 16.12 67.9432 15.984 67.6872 15.712C67.4392 15.432 67.3152 15.004 67.3152 14.428V7.3H68.5992ZM73.4894 16.12C72.8894 16.12 72.3614 15.996 71.9054 15.748C71.4494 15.5 71.0934 15.144 70.8374 14.68C70.5894 14.208 70.4654 13.648 70.4654 13C70.4654 12.352 70.5894 11.796 70.8374 11.332C71.0934 10.86 71.4454 10.5 71.8934 10.252C72.3414 10.004 72.8494 9.88 73.4174 9.88C74.0014 9.88 74.4974 10 74.9054 10.24C75.3134 10.48 75.6254 10.808 75.8414 11.224C76.0574 11.64 76.1654 12.112 76.1654 12.64C76.1654 12.784 76.1614 12.92 76.1534 13.048C76.1454 13.176 76.1334 13.288 76.1174 13.384H71.2934V12.4H75.5534L74.9174 12.592C74.9174 12.048 74.7814 11.632 74.5094 11.344C74.2374 11.048 73.8654 10.9 73.3934 10.9C73.0494 10.9 72.7494 10.98 72.4934 11.14C72.2374 11.3 72.0414 11.54 71.9054 11.86C71.7694 12.172 71.7014 12.556 71.7014 13.012C71.7014 13.46 71.7734 13.84 71.9174 14.152C72.0614 14.464 72.2654 14.7 72.5294 14.86C72.7934 15.02 73.1054 15.1 73.4654 15.1C73.8654 15.1 74.1894 15.024 74.4374 14.872C74.6854 14.72 74.8814 14.508 75.0254 14.236L76.0454 14.716C75.9014 15.004 75.7054 15.256 75.4574 15.472C75.2174 15.68 74.9294 15.84 74.5934 15.952C74.2574 16.064 73.8894 16.12 73.4894 16.12Z" fill="white"/>
</g>
<defs>
<filter id="filter0_b_1975_19514" x="-12" y="-12" width="107" height="48" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feGaussianBlur in="BackgroundImageFix" stdDeviation="6"/>
<feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_1975_19514"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_backgroundBlur_1975_19514" result="shape"/>
</filter>
</defs>
                      </svg>
                    </div>
                  }

                  {room.isTopRated && 
                    <div className="top-rated-room-badge">
                      <svg width="94" height="24" viewBox="0 0 94 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect width="94" height="24" rx="4" fill="#1F70F5"/>
                        <path d="M14.4503 13.1335L15.0337 11.2335L13.5003 10.0002H15.4003L16.0003 8.1335L16.6003 10.0002H18.5003L16.9503 11.2335L17.5337 13.1335L16.0003 11.9502L14.4503 13.1335ZM12.0003 19.3335V14.1835C11.5781 13.7168 11.2503 13.1835 11.017 12.5835C10.7837 11.9835 10.667 11.3446 10.667 10.6668C10.667 9.17794 11.1837 7.91683 12.217 6.8835C13.2503 5.85016 14.5114 5.3335 16.0003 5.3335C17.4892 5.3335 18.7503 5.85016 19.7837 6.8835C20.817 7.91683 21.3337 9.17794 21.3337 10.6668C21.3337 11.3446 21.217 11.9835 20.9837 12.5835C20.7503 13.1835 20.4225 13.7168 20.0003 14.1835V19.3335L16.0003 18.0002L12.0003 19.3335ZM16.0003 14.6668C17.1114 14.6668 18.0559 14.2779 18.8337 13.5002C19.6114 12.7224 20.0003 11.7779 20.0003 10.6668C20.0003 9.55572 19.6114 8.61127 18.8337 7.8335C18.0559 7.05572 17.1114 6.66683 16.0003 6.66683C14.8892 6.66683 13.9448 7.05572 13.167 7.8335C12.3892 8.61127 12.0003 9.55572 12.0003 10.6668C12.0003 11.7779 12.3892 12.7224 13.167 13.5002C13.9448 14.2779 14.8892 14.6668 16.0003 14.6668Z" fill="white"/>
                        <path d="M35.068 8.08V9.184H32.356V16H31.072V9.184H28.36V8.08H35.068ZM37.5358 9.88C38.1198 9.88 38.6358 10.004 39.0838 10.252C39.5318 10.5 39.8798 10.86 40.1278 11.332C40.3838 11.796 40.5118 12.352 40.5118 13C40.5118 13.648 40.3838 14.208 40.1278 14.68C39.8798 15.144 39.5318 15.5 39.0838 15.748C38.6358 15.996 38.1198 16.12 37.5358 16.12C36.9518 16.12 36.4358 15.996 35.9878 15.748C35.5398 15.5 35.1878 15.144 34.9318 14.68C34.6758 14.208 34.5478 13.648 34.5478 13C34.5478 12.352 34.6758 11.796 34.9318 11.332C35.1878 10.86 35.5398 10.5 35.9878 10.252C36.4358 10.004 36.9518 9.88 37.5358 9.88ZM37.5358 10.888C37.1758 10.888 36.8678 10.972 36.6118 11.14C36.3638 11.3 36.1718 11.536 36.0358 11.848C35.8998 12.16 35.8318 12.544 35.8318 13C35.8318 13.448 35.8998 13.832 36.0358 14.152C36.1718 14.464 36.3638 14.704 36.6118 14.872C36.8678 15.032 37.1758 15.112 37.5358 15.112C37.8958 15.112 38.1998 15.032 38.4478 14.872C38.6958 14.704 38.8878 14.464 39.0238 14.152C39.1598 13.832 39.2278 13.448 39.2278 13C39.2278 12.544 39.1598 12.16 39.0238 11.848C38.8878 11.536 38.6958 11.3 38.4478 11.14C38.1998 10.972 37.8958 10.888 37.5358 10.888ZM41.8871 18.52V10H43.0271L43.1231 11.68L42.9551 11.476C43.0511 11.164 43.1991 10.888 43.3991 10.648C43.5991 10.408 43.8471 10.22 44.1431 10.084C44.4471 9.948 44.7791 9.88 45.1391 9.88C45.6271 9.88 46.0711 10.004 46.4711 10.252C46.8711 10.5 47.1871 10.856 47.4191 11.32C47.6511 11.776 47.7671 12.332 47.7671 12.988C47.7671 13.644 47.6471 14.208 47.4071 14.68C47.1751 15.144 46.8551 15.5 46.4471 15.748C46.0471 15.996 45.5991 16.12 45.1031 16.12C44.5911 16.12 44.1551 15.988 43.7951 15.724C43.4351 15.452 43.1791 15.108 43.0271 14.692L43.1711 14.488V18.52H41.8871ZM44.8271 15.076C45.3471 15.076 45.7511 14.892 46.0391 14.524C46.3351 14.156 46.4831 13.648 46.4831 13C46.4831 12.352 46.3391 11.844 46.0511 11.476C45.7631 11.1 45.3631 10.912 44.8511 10.912C44.5151 10.912 44.2191 11 43.9631 11.176C43.7151 11.344 43.5191 11.584 43.3751 11.896C43.2391 12.2 43.1711 12.568 43.1711 13C43.1711 13.424 43.2391 13.792 43.3751 14.104C43.5111 14.416 43.7031 14.656 43.9511 14.824C44.1991 14.992 44.4911 15.076 44.8271 15.076ZM56.2409 8.08C57.0889 8.08 57.7609 8.292 58.2569 8.716C58.7609 9.14 59.0129 9.712 59.0129 10.432C59.0129 11.176 58.7609 11.752 58.2569 12.16C57.7609 12.56 57.0889 12.76 56.2409 12.76L56.1209 12.832H54.2849V16H53.0129V8.08H56.2409ZM56.1449 11.764C56.6649 11.764 57.0489 11.66 57.2969 11.452C57.5529 11.236 57.6809 10.908 57.6809 10.468C57.6809 10.036 57.5529 9.712 57.2969 9.496C57.0489 9.28 56.6649 9.172 56.1449 9.172H54.2849V11.764H56.1449ZM56.9009 12.028L59.4809 16H58.0049L55.7969 12.532L56.9009 12.028ZM64.1234 12.148C64.1234 11.748 64.0114 11.44 63.7874 11.224C63.5714 11 63.2714 10.888 62.8874 10.888C62.5274 10.888 62.2194 10.972 61.9634 11.14C61.7074 11.308 61.5194 11.58 61.3994 11.956L60.3194 11.5C60.4714 11.012 60.7674 10.62 61.2074 10.324C61.6554 10.028 62.2314 9.88 62.9354 9.88C63.4154 9.88 63.8394 9.96 64.2074 10.12C64.5754 10.272 64.8634 10.504 65.0714 10.816C65.2874 11.128 65.3954 11.528 65.3954 12.016V14.692C65.3954 14.988 65.5434 15.136 65.8394 15.136C65.9834 15.136 66.1234 15.116 66.2594 15.076L66.1874 15.964C66.0034 16.052 65.7714 16.096 65.4914 16.096C65.2354 16.096 65.0034 16.052 64.7954 15.964C64.5954 15.868 64.4354 15.728 64.3154 15.544C64.2034 15.352 64.1474 15.116 64.1474 14.836V14.752L64.4114 14.74C64.3394 15.052 64.1914 15.312 63.9674 15.52C63.7434 15.72 63.4834 15.872 63.1874 15.976C62.8914 16.072 62.5914 16.12 62.2874 16.12C61.9114 16.12 61.5714 16.06 61.2674 15.94C60.9714 15.82 60.7354 15.64 60.5594 15.4C60.3914 15.152 60.3074 14.848 60.3074 14.488C60.3074 14.04 60.4514 13.672 60.7394 13.384C61.0354 13.096 61.4514 12.9 61.9874 12.796L64.3154 12.34L64.3034 13.24L62.6114 13.588C62.2754 13.652 62.0234 13.744 61.8554 13.864C61.6874 13.984 61.6034 14.16 61.6034 14.392C61.6034 14.616 61.6874 14.796 61.8554 14.932C62.0314 15.06 62.2634 15.124 62.5514 15.124C62.7514 15.124 62.9434 15.1 63.1274 15.052C63.3194 15.004 63.4914 14.928 63.6434 14.824C63.7954 14.712 63.9114 14.572 63.9914 14.404C64.0794 14.228 64.1234 14.02 64.1234 13.78V12.148ZM68.7768 8.236V14.2C68.7768 14.496 68.8528 14.712 69.0048 14.848C69.1648 14.984 69.3768 15.052 69.6408 15.052C69.8568 15.052 70.0448 15.02 70.2048 14.956C70.3648 14.884 70.5128 14.788 70.6488 14.668L70.9368 15.604C70.7528 15.764 70.5248 15.892 70.2528 15.988C69.9888 16.076 69.6928 16.12 69.3648 16.12C69.0208 16.12 68.7048 16.064 68.4168 15.952C68.1288 15.84 67.9048 15.66 67.7448 15.412C67.5848 15.156 67.5008 14.824 67.4928 14.416V8.596L68.7768 8.236ZM70.8408 10V11.008H66.3408V10H70.8408ZM74.5107 16.12C73.9107 16.12 73.3827 15.996 72.9267 15.748C72.4707 15.5 72.1147 15.144 71.8587 14.68C71.6107 14.208 71.4867 13.648 71.4867 13C71.4867 12.352 71.6107 11.796 71.8587 11.332C72.1147 10.86 72.4667 10.5 72.9147 10.252C73.3627 10.004 73.8707 9.88 74.4387 9.88C75.0227 9.88 75.5187 10 75.9267 10.24C76.3347 10.48 76.6467 10.808 76.8627 11.224C77.0787 11.64 77.1867 12.112 77.1867 12.64C77.1867 12.784 77.1827 12.92 77.1747 13.048C77.1667 13.176 77.1547 13.288 77.1387 13.384H72.3147V12.4H76.5747L75.9387 12.592C75.9387 12.048 75.8027 11.632 75.5307 11.344C75.2587 11.048 74.8867 10.9 74.4147 10.9C74.0707 10.9 73.7707 10.98 73.5147 11.14C73.2587 11.3 73.0627 11.54 72.9267 11.86C72.7907 12.172 72.7227 12.556 72.7227 13.012C72.7227 13.46 72.7947 13.84 72.9387 14.152C73.0827 14.464 73.2867 14.7 73.5507 14.86C73.8147 15.02 74.1267 15.1 74.4867 15.1C74.8867 15.1 75.2107 15.024 75.4587 14.872C75.7067 14.72 75.9027 14.508 76.0467 14.236L77.0667 14.716C76.9227 15.004 76.7267 15.256 76.4787 15.472C76.2387 15.68 75.9507 15.84 75.6147 15.952C75.2787 16.064 74.9107 16.12 74.5107 16.12ZM80.8722 16.12C80.3762 16.12 79.9242 15.996 79.5162 15.748C79.1162 15.5 78.8002 15.144 78.5682 14.68C78.3362 14.216 78.2202 13.66 78.2202 13.012C78.2202 12.34 78.3442 11.772 78.5922 11.308C78.8402 10.844 79.1722 10.492 79.5882 10.252C80.0042 10.004 80.4602 9.88 80.9562 9.88C81.4682 9.88 81.9002 10.02 82.2522 10.3C82.6042 10.58 82.8402 10.944 82.9602 11.392L82.8162 11.524V7.3H84.1002V16H82.9602L82.8642 14.368L83.0322 14.38C82.9762 14.74 82.8442 15.052 82.6362 15.316C82.4282 15.572 82.1682 15.772 81.8562 15.916C81.5522 16.052 81.2242 16.12 80.8722 16.12ZM81.1482 15.088C81.4922 15.088 81.7882 15 82.0362 14.824C82.2842 14.648 82.4762 14.4 82.6122 14.08C82.7482 13.76 82.8162 13.376 82.8162 12.928C82.8162 12.512 82.7482 12.156 82.6122 11.86C82.4762 11.556 82.2842 11.324 82.0362 11.164C81.7962 11.004 81.5162 10.924 81.1962 10.924C80.6602 10.924 80.2442 11.108 79.9482 11.476C79.6522 11.844 79.5042 12.352 79.5042 13C79.5042 13.648 79.6482 14.16 79.9362 14.536C80.2242 14.904 80.6282 15.088 81.1482 15.088Z" fill="white"/>
                      </svg>
                    </div>
                  }
                  {!room.isAvailable &&
                    <div className="not-available-badge">
                      <svg width="107" height="24" viewBox="0 0 107 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_b_1975_19625)">
<rect width="107" height="24" rx="4" fill="#8E8E8E"/>
<mask id="mask0_1975_19625" style={{maskType:'alpha'}} maskUnits="userSpaceOnUse" x="6" y="4" width="16" height="16">
<rect x="6" y="4" width="16" height="16" fill="#D9D9D9"/>
</mask>
<g mask="url(#mask0_1975_19625)">
<path d="M11.5997 15.3333L13.9997 12.9333L16.3997 15.3333L17.333 14.3999L14.933 11.9999L17.333 9.59992L16.3997 8.66658L13.9997 11.0666L11.5997 8.66658L10.6663 9.59992L13.0663 11.9999L10.6663 14.3999L11.5997 15.3333ZM13.9997 18.6666C13.0775 18.6666 12.2108 18.4916 11.3997 18.1416C10.5886 17.7916 9.88301 17.3166 9.28301 16.7166C8.68301 16.1166 8.20801 15.411 7.85801 14.5999C7.50801 13.7888 7.33301 12.9221 7.33301 11.9999C7.33301 11.0777 7.50801 10.211 7.85801 9.39992C8.20801 8.58881 8.68301 7.88325 9.28301 7.28325C9.88301 6.68325 10.5886 6.20825 11.3997 5.85825C12.2108 5.50825 13.0775 5.33325 13.9997 5.33325C14.9219 5.33325 15.7886 5.50825 16.5997 5.85825C17.4108 6.20825 18.1163 6.68325 18.7163 7.28325C19.3163 7.88325 19.7913 8.58881 20.1413 9.39992C20.4913 10.211 20.6663 11.0777 20.6663 11.9999C20.6663 12.9221 20.4913 13.7888 20.1413 14.5999C19.7913 15.411 19.3163 16.1166 18.7163 16.7166C18.1163 17.3166 17.4108 17.7916 16.5997 18.1416C15.7886 18.4916 14.9219 18.6666 13.9997 18.6666Z" fill="white"/>
</g>
<path d="M33.668 8.08V16H32.144L29.084 11.008L28.316 9.604H28.304L28.352 10.888V16H27.176V8.08H28.688L31.736 13.06L32.516 14.488H32.528L32.48 13.192V8.08H33.668ZM38.1139 9.88C38.6979 9.88 39.2139 10.004 39.6619 10.252C40.1099 10.5 40.4579 10.86 40.7059 11.332C40.9619 11.796 41.0899 12.352 41.0899 13C41.0899 13.648 40.9619 14.208 40.7059 14.68C40.4579 15.144 40.1099 15.5 39.6619 15.748C39.2139 15.996 38.6979 16.12 38.1139 16.12C37.5299 16.12 37.0139 15.996 36.5659 15.748C36.1179 15.5 35.7659 15.144 35.5099 14.68C35.2539 14.208 35.1259 13.648 35.1259 13C35.1259 12.352 35.2539 11.796 35.5099 11.332C35.7659 10.86 36.1179 10.5 36.5659 10.252C37.0139 10.004 37.5299 9.88 38.1139 9.88ZM38.1139 10.888C37.7539 10.888 37.4459 10.972 37.1899 11.14C36.9419 11.3 36.7499 11.536 36.6139 11.848C36.4779 12.16 36.4099 12.544 36.4099 13C36.4099 13.448 36.4779 13.832 36.6139 14.152C36.7499 14.464 36.9419 14.704 37.1899 14.872C37.4459 15.032 37.7539 15.112 38.1139 15.112C38.4739 15.112 38.7779 15.032 39.0259 14.872C39.2739 14.704 39.4659 14.464 39.6019 14.152C39.7379 13.832 39.8059 13.448 39.8059 13C39.8059 12.544 39.7379 12.16 39.6019 11.848C39.4659 11.536 39.2739 11.3 39.0259 11.14C38.7779 10.972 38.4739 10.888 38.1139 10.888ZM44.1352 8.236V14.2C44.1352 14.496 44.2112 14.712 44.3632 14.848C44.5232 14.984 44.7352 15.052 44.9992 15.052C45.2152 15.052 45.4032 15.02 45.5632 14.956C45.7232 14.884 45.8712 14.788 46.0072 14.668L46.2952 15.604C46.1112 15.764 45.8832 15.892 45.6112 15.988C45.3472 16.076 45.0512 16.12 44.7232 16.12C44.3792 16.12 44.0632 16.064 43.7752 15.952C43.4872 15.84 43.2632 15.66 43.1032 15.412C42.9432 15.156 42.8592 14.824 42.8512 14.416V8.596L44.1352 8.236ZM46.1992 10V11.008H41.6992V10H46.1992ZM57.2373 16H55.8813L55.1253 13.924H51.8013L51.0453 16H49.7253L52.7133 8.08H54.2493L57.2373 16ZM52.1613 12.88H54.7653L53.4693 9.184L52.1613 12.88ZM61.7127 10H63.0567L60.6687 16H59.2647L56.8647 10H58.2687L59.9727 14.884L61.7127 10ZM67.2388 12.148C67.2388 11.748 67.1268 11.44 66.9028 11.224C66.6868 11 66.3868 10.888 66.0028 10.888C65.6428 10.888 65.3348 10.972 65.0788 11.14C64.8228 11.308 64.6348 11.58 64.5148 11.956L63.4348 11.5C63.5868 11.012 63.8828 10.62 64.3228 10.324C64.7708 10.028 65.3468 9.88 66.0508 9.88C66.5308 9.88 66.9548 9.96 67.3228 10.12C67.6908 10.272 67.9788 10.504 68.1868 10.816C68.4028 11.128 68.5108 11.528 68.5108 12.016V14.692C68.5108 14.988 68.6588 15.136 68.9548 15.136C69.0988 15.136 69.2388 15.116 69.3748 15.076L69.3028 15.964C69.1188 16.052 68.8868 16.096 68.6068 16.096C68.3508 16.096 68.1188 16.052 67.9108 15.964C67.7108 15.868 67.5508 15.728 67.4308 15.544C67.3188 15.352 67.2628 15.116 67.2628 14.836V14.752L67.5268 14.74C67.4548 15.052 67.3068 15.312 67.0828 15.52C66.8588 15.72 66.5988 15.872 66.3028 15.976C66.0068 16.072 65.7068 16.12 65.4028 16.12C65.0268 16.12 64.6868 16.06 64.3828 15.94C64.0868 15.82 63.8508 15.64 63.6748 15.4C63.5068 15.152 63.4228 14.848 63.4228 14.488C63.4228 14.04 63.5668 13.672 63.8548 13.384C64.1508 13.096 64.5668 12.9 65.1028 12.796L67.4308 12.34L67.4188 13.24L65.7268 13.588C65.3908 13.652 65.1388 13.744 64.9708 13.864C64.8028 13.984 64.7188 14.16 64.7188 14.392C64.7188 14.616 64.8028 14.796 64.9708 14.932C65.1468 15.06 65.3788 15.124 65.6668 15.124C65.8668 15.124 66.0588 15.1 66.2428 15.052C66.4348 15.004 66.6068 14.928 66.7588 14.824C66.9108 14.712 67.0268 14.572 67.1068 14.404C67.1948 14.228 67.2388 14.02 67.2388 13.78V12.148ZM71.0226 8.992C70.7426 8.992 70.5266 8.924 70.3746 8.788C70.2306 8.644 70.1586 8.444 70.1586 8.188C70.1586 7.932 70.2306 7.736 70.3746 7.6C70.5266 7.464 70.7426 7.396 71.0226 7.396C71.2946 7.396 71.5026 7.464 71.6466 7.6C71.7986 7.736 71.8746 7.932 71.8746 8.188C71.8746 8.444 71.7986 8.644 71.6466 8.788C71.5026 8.924 71.2946 8.992 71.0226 8.992ZM71.6586 10V16H70.3746V10H71.6586ZM74.6756 7.3V14.32C74.6756 14.616 74.7276 14.82 74.8316 14.932C74.9356 15.044 75.1076 15.1 75.3476 15.1C75.4916 15.1 75.6116 15.092 75.7076 15.076C75.8116 15.052 75.9396 15.012 76.0916 14.956L75.9476 15.916C75.8116 15.98 75.6556 16.028 75.4796 16.06C75.3036 16.1 75.1276 16.12 74.9516 16.12C74.4156 16.12 74.0196 15.984 73.7636 15.712C73.5156 15.432 73.3916 15.004 73.3916 14.428V7.3H74.6756ZM80.4173 12.148C80.4173 11.748 80.3053 11.44 80.0813 11.224C79.8653 11 79.5653 10.888 79.1813 10.888C78.8213 10.888 78.5133 10.972 78.2573 11.14C78.0013 11.308 77.8133 11.58 77.6933 11.956L76.6133 11.5C76.7653 11.012 77.0613 10.62 77.5013 10.324C77.9493 10.028 78.5253 9.88 79.2293 9.88C79.7093 9.88 80.1333 9.96 80.5013 10.12C80.8693 10.272 81.1573 10.504 81.3653 10.816C81.5813 11.128 81.6893 11.528 81.6893 12.016V14.692C81.6893 14.988 81.8373 15.136 82.1333 15.136C82.2773 15.136 82.4173 15.116 82.5533 15.076L82.4813 15.964C82.2973 16.052 82.0653 16.096 81.7853 16.096C81.5293 16.096 81.2973 16.052 81.0893 15.964C80.8893 15.868 80.7293 15.728 80.6093 15.544C80.4973 15.352 80.4413 15.116 80.4413 14.836V14.752L80.7053 14.74C80.6333 15.052 80.4853 15.312 80.2613 15.52C80.0373 15.72 79.7773 15.872 79.4813 15.976C79.1853 16.072 78.8853 16.12 78.5813 16.12C78.2053 16.12 77.8653 16.06 77.5613 15.94C77.2653 15.82 77.0293 15.64 76.8533 15.4C76.6853 15.152 76.6013 14.848 76.6013 14.488C76.6013 14.04 76.7453 13.672 77.0333 13.384C77.3293 13.096 77.7453 12.9 78.2813 12.796L80.6093 12.34L80.5973 13.24L78.9053 13.588C78.5693 13.652 78.3173 13.744 78.1493 13.864C77.9813 13.984 77.8973 14.16 77.8973 14.392C77.8973 14.616 77.9813 14.796 78.1493 14.932C78.3253 15.06 78.5573 15.124 78.8453 15.124C79.0453 15.124 79.2373 15.1 79.4213 15.052C79.6133 15.004 79.7853 14.928 79.9373 14.824C80.0893 14.712 80.2053 14.572 80.2853 14.404C80.3733 14.228 80.4173 14.02 80.4173 13.78V12.148ZM86.769 16.12C86.417 16.12 86.093 16.052 85.797 15.916C85.509 15.78 85.265 15.592 85.065 15.352C84.865 15.104 84.717 14.828 84.621 14.524L84.777 14.32L84.681 16H83.553V7.3H84.837V11.512L84.693 11.308C84.845 10.892 85.105 10.552 85.473 10.288C85.841 10.016 86.285 9.88 86.805 9.88C87.285 9.88 87.725 10.004 88.125 10.252C88.533 10.5 88.853 10.856 89.085 11.32C89.317 11.784 89.433 12.348 89.433 13.012C89.433 13.66 89.313 14.216 89.073 14.68C88.841 15.144 88.521 15.5 88.113 15.748C87.713 15.996 87.265 16.12 86.769 16.12ZM86.493 15.088C87.013 15.088 87.417 14.904 87.705 14.536C88.001 14.16 88.149 13.648 88.149 13C88.149 12.352 88.005 11.844 87.717 11.476C87.429 11.108 87.025 10.924 86.505 10.924C86.169 10.924 85.877 11.012 85.629 11.188C85.381 11.356 85.185 11.596 85.041 11.908C84.905 12.22 84.837 12.592 84.837 13.024C84.837 13.448 84.905 13.816 85.041 14.128C85.177 14.432 85.369 14.668 85.617 14.836C85.873 15.004 86.165 15.088 86.493 15.088ZM92.0845 7.3V14.32C92.0845 14.616 92.1365 14.82 92.2405 14.932C92.3445 15.044 92.5165 15.1 92.7565 15.1C92.9005 15.1 93.0205 15.092 93.1165 15.076C93.2205 15.052 93.3485 15.012 93.5005 14.956L93.3565 15.916C93.2205 15.98 93.0645 16.028 92.8885 16.06C92.7125 16.1 92.5365 16.12 92.3605 16.12C91.8245 16.12 91.4285 15.984 91.1725 15.712C90.9245 15.432 90.8005 15.004 90.8005 14.428V7.3H92.0845ZM96.9748 16.12C96.3748 16.12 95.8468 15.996 95.3908 15.748C94.9348 15.5 94.5788 15.144 94.3228 14.68C94.0748 14.208 93.9508 13.648 93.9508 13C93.9508 12.352 94.0748 11.796 94.3228 11.332C94.5788 10.86 94.9308 10.5 95.3788 10.252C95.8268 10.004 96.3348 9.88 96.9028 9.88C97.4868 9.88 97.9828 10 98.3908 10.24C98.7988 10.48 99.1108 10.808 99.3268 11.224C99.5428 11.64 99.6508 12.112 99.6508 12.64C99.6508 12.784 99.6468 12.92 99.6388 13.048C99.6308 13.176 99.6188 13.288 99.6028 13.384H94.7788V12.4H99.0388L98.4028 12.592C98.4028 12.048 98.2668 11.632 97.9948 11.344C97.7228 11.048 97.3508 10.9 96.8788 10.9C96.5348 10.9 96.2348 10.98 95.9788 11.14C95.7228 11.3 95.5268 11.54 95.3908 11.86C95.2548 12.172 95.1868 12.556 95.1868 13.012C95.1868 13.46 95.2588 13.84 95.4028 14.152C95.5468 14.464 95.7508 14.7 96.0148 14.86C96.2788 15.02 96.5908 15.1 96.9508 15.1C97.3508 15.1 97.6748 15.024 97.9228 14.872C98.1708 14.72 98.3668 14.508 98.5108 14.236L99.5308 14.716C99.3868 15.004 99.1908 15.256 98.9428 15.472C98.7028 15.68 98.4148 15.84 98.0788 15.952C97.7428 16.064 97.3748 16.12 96.9748 16.12Z" fill="white"/>
</g>
<defs>
<filter id="filter0_b_1975_19625" x="-12" y="-12" width="131" height="48" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feGaussianBlur in="BackgroundImageFix" stdDeviation="6"/>
<feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_1975_19625"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_backgroundBlur_1975_19625" result="shape"/>
</filter>
</defs>
                      </svg>
                    </div>
                  }
                  </div>
                  <img
                    src={room.images[currentImageIndex]}
                    alt={`${name} - Image ${currentImageIndex + 1}`}
                    className="property-image"
                  />
                  <button className="prev-button" onClick={handlePrevImageRoom}>
                    &lt;
                  </button>
                  <button className="next-button" onClick={handleNextImageRoom}>
                    &gt;
                  </button>
                  <div className="bottom-badges">
                    <div className="badge gender-badge">
                      {room.gender.includes("male") && room.gender.includes("female") ? "Unisex" : room.gender[0]}
                    </div>
                    <div className="badge room-type-badge">{room.roomType}</div>
                  </div>
                </div>
              </div>

              <div className="room-details">
              <h2 className="room-type">{room.roomType}</h2>
              <div className="room-price">
              <div className="price-section">
                <div className="current-price-box">
                  <span className="current-price">₹{room.price}/month</span>
                </div>
                {room.originalPrice && room.originalPrice !== room.price && (
                  <span className="original-price">₹{room.originalPrice}/month</span>
                )}
              </div>
              <p className="security-deposit">Security Deposit: ₹{room.securityDeposit}</p>
              </div>
              <div className="property-features">
                {displayedFeatures.map((feature, index) => (
                  <div key={index} className="feature-box">
                    {feature}
                  </div>
                ))}
                {remaningFeatures>0 && (
                  <div className="more-features">+{remaningFeatures} more</div>
                )}
              </div>
            </div>
          </div>
          ))}
        </div>

      <h4>Reviews</h4>
        <div className="reviews-section">
          <div className="review-header-box">
            <div className="review-header">
              <div className="review-header-left">
                <h5>Guest Feedback</h5>
                <p>{property.overallRating}/5.0</p>
                <p className="feedback">{getFeedback(property.overallRating)}</p>
              </div>
              <div className="review-header-right">
                <h5>Complaint Resolution</h5>
                <p>{property.complaintResolution}/100</p>
                <p className="feedback">{getComplaintFeedback(property.complaintResolution)}</p>
              </div>
            </div>
          </div>
          <div className="comments-section">
            <h3>{Math.min(visibleComments, property.reviews.length)} COMMENTS</h3>
            {property.reviews.slice(0, visibleComments).map((review, index) => (
              <div key={index}>
                <div className="comment-card">
                  <div className="user-details">
                    {/* <img src={review.userPic} alt={review.userName} className="user-pic" /> */}
                    <span className="username">@{review.userName}</span>
                    <span className="rating">{review.rating}/5.0</span>
                  </div>
                  <p>{review.comment}</p>
                  <div className="room-info">
                    <span>{review.roomType}</span>
                    <span className="posted-date">{getRelativeTime(review.postedDate)}</span>
                  </div>
                </div>
                {index < property.reviews.length - 1 && <hr className="comment-separator" />}
              </div>
            ))}
            {visibleComments < property.reviews.length && (
              <div className="load-more-container">
                <button className="load-more-btn" onClick={loadMoreComments}>
                  Load More
                </button>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Right Section */}
      <div className="right-section">
        <h2>{property.name}</h2>
        <p>{property.area || "Unknown"}</p>
        <h3>Starts at</h3>
        <div className="price-section">
          <div className="current-price-box">
            <span className="current-price">₹{property.price}/month</span>
          </div>
          {property.originalPrice && property.originalPrice !== property.price && (
            <span className="original-price">₹{property.originalPrice}/month</span>
          )}
        </div>
        <div className="phone-number-box">
          <div className="phone-number">
            <span className="phone-label">Phone Number</span>
            <span className="formatted-phone-number">
              {property.phoneNumber.replace(/(\d{5})(\d{5})/, "$1 $2")}
            </span>
          </div>
        </div>
        <div className="button-group">
          <button className="share-button" onClick={handleShare}>
            <i className="fas fa-share-alt"></i>
          </button>
          <button className="callback-button" onClick={handleRequestCallback}>
            <i className="fas fa-phone-alt"></i>
            <span>Request 1-Click Callback</span>
          </button>
        </div>
        <div className="property-features">
          {displayedFeatures.map((feature, index) => (
            <div key={index} className="feature-box">
              {feature}
            </div>
          ))}
          {remaningFeatures>0 && (
            <div className="more-features">+{remaningFeatures} more</div>
          )}
        </div>
      </div>
    </div>
  );
};

export default PropertyDetails;
