import React, {useState} from 'react';
import './../styles/OTPModal.css';
import SlidingCard from './SlidingCard';

function OTPModal({ closeModal,phoneNumber, openLoginModal }) {

    const [otp,setOtp] = useState(Array(4).fill(''));
    const [errorMessage, setErrorMessage] = useState('');
    
    const verifyOtp = () => {
        const correctOtp ='1234';
        const otpValue = otp.join('');
        if(otpValue===correctOtp){
            setErrorMessage('');
            closeModal();
            alert('OTP verified Successfully!');
        }
        else{
            setErrorMessage('Incorrect OTP, please try again.');
        }
    };

    const inputRefs = Array(otp.length)
        .fill(null)
        .map(() => React.createRef());

    const handleOtpChange = (e,index) => {
        const value = e.target.value;
        if(/[^0-9]/.test(value)) return;
        const otpCopy = [...otp];
        otpCopy[index] = value;
        setOtp(otpCopy);
        if(value!==''){
            if(index<otp.length-1){
                inputRefs[index+1].current?.focus();
            }
        }
    };

    const handleResendOtp = () => {
        setOtp(Array(4).fill(''));
        setErrorMessage('');
      };

  return (
    <div className="modal-overlay">
      <div className="modal">
        <div className="modal-left">
            <SlidingCard/>
        </div>
        <div className='modal-right'>
        <div className="modal-header">
          {/* Logo SVG (on the left) */}
            <div className="logo-name-container">
                <div className="logo">
                <svg width="23" height="21" viewBox="0 0 23 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="6.18359" y="6.10352e-05" width="10.5653" height="17.8289" rx="1.98099" fill="#565CEC"/>
                    <rect opacity="0.3" x="2.9707" y="8.74945" width="17.0035" height="11.8859" rx="1.98099" fill="#565CEC"/>
                    <rect x="8.41992" y="9.73987" width="5.94296" height="5.94296" rx="2.97148" fill="white"/>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M0.25288 11.7241C0.710678 12.4051 1.63384 12.586 2.31481 12.1282L10.6636 6.51558C11.0534 6.25349 11.5631 6.25349 11.953 6.51558L20.3018 12.1282C20.9827 12.586 21.9059 12.4051 22.3637 11.7241C22.8215 11.0431 22.6406 10.12 21.9596 9.66217L13.6108 4.04955C12.2185 3.11353 10.3981 3.11353 9.00574 4.04955L0.656977 9.66217C-0.023998 10.12 -0.204918 11.0431 0.25288 11.7241Z" fill="#4E40EB"/>
                    <g style={{mixBlendMode:'color-dodge'}}>
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M6.18359 9.52852V5.94799L9.00733 4.04968C10.3997 3.11365 12.2201 3.11365 13.6124 4.04968L16.7489 6.1582V9.73874L11.9546 6.5157C11.5647 6.25362 11.055 6.25362 10.6652 6.5157L6.18359 9.52852Z" fill="#40D6EB"/>
                    </g>
                </svg>
                </div>
            {/* Website Name SVG (on the left next to the logo) */}
                <div className="website-name">
                    <svg width="80" height="14" viewBox="0 0 80 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M4.41119 10.9576C3.71119 10.9576 3.05785 10.8456 2.45119 10.6216C1.85385 10.3883 1.35919 10.057 0.967188 9.62763L2.08719 8.31163C2.32052 8.61029 2.62852 8.86229 3.01119 9.06763C3.40319 9.26363 3.83719 9.36163 4.31319 9.36163C4.60252 9.36163 4.84052 9.31963 5.02719 9.23563C5.21385 9.15163 5.30719 9.02096 5.30719 8.84363C5.30719 8.71296 5.26052 8.61029 5.16719 8.53563C5.07385 8.45163 4.88719 8.38163 4.60719 8.32563L3.62719 8.12963C2.74985 7.95229 2.12452 7.69096 1.75119 7.34563C1.38719 6.99096 1.20519 6.52896 1.20519 5.95963C1.20519 5.57696 1.32185 5.21296 1.55519 4.86763C1.78852 4.51296 2.14785 4.22829 2.63319 4.01363C3.11852 3.78963 3.73919 3.67763 4.49519 3.67763C5.20452 3.67763 5.82985 3.78029 6.37119 3.98563C6.91252 4.19096 7.34185 4.48963 7.65919 4.88163L6.52519 6.16963C6.30119 5.88963 6.01185 5.67029 5.65719 5.51163C5.30252 5.35296 4.94785 5.27363 4.59319 5.27363C4.36919 5.27363 4.17785 5.29696 4.01919 5.34363C3.86985 5.38096 3.75785 5.43696 3.68319 5.51163C3.60852 5.58629 3.57119 5.67963 3.57119 5.79163C3.57119 5.91296 3.62719 6.02029 3.73919 6.11363C3.86052 6.19763 4.07985 6.27229 4.39719 6.33763L5.67119 6.58963C6.38985 6.72029 6.90785 6.95829 7.22519 7.30363C7.54252 7.64896 7.70119 8.06429 7.70119 8.54963C7.70119 9.00696 7.57985 9.41763 7.33719 9.78163C7.09452 10.1456 6.73052 10.435 6.24519 10.6496C5.75985 10.855 5.14852 10.9576 4.41119 10.9576ZM10.742 10.9576C10.266 10.9576 9.84603 10.8783 9.48203 10.7196C9.12736 10.5516 8.84736 10.2856 8.64203 9.92163C8.4367 9.55763 8.33403 9.08163 8.33403 8.49363V3.81763H10.714V7.93363C10.714 8.38163 10.8027 8.69429 10.98 8.87163C11.1574 9.04896 11.4094 9.13763 11.736 9.13763C11.904 9.13763 12.0627 9.10963 12.212 9.05363C12.3614 8.98829 12.492 8.89496 12.604 8.77363C12.716 8.64296 12.8 8.47963 12.856 8.28363C12.9214 8.07829 12.954 7.84029 12.954 7.56963V3.81763H15.334V10.8176H13.206L13.136 9.50163C12.912 9.99629 12.5994 10.365 12.198 10.6076C11.7967 10.841 11.3114 10.9576 10.742 10.9576ZM16.484 13.7576V3.81763H18.626L18.752 6.35163L18.472 6.05763C18.5373 5.59096 18.682 5.18029 18.906 4.82563C19.13 4.47096 19.4193 4.19096 19.774 3.98563C20.1287 3.78029 20.5347 3.67763 20.992 3.67763C21.5707 3.67763 22.0747 3.82229 22.504 4.11163C22.9333 4.39163 23.2647 4.80229 23.498 5.34363C23.7407 5.87563 23.862 6.52429 23.862 7.28963C23.862 8.05496 23.7407 8.71296 23.498 9.26363C23.2553 9.81429 22.9147 10.2343 22.476 10.5236C22.0467 10.813 21.5427 10.9576 20.964 10.9576C20.3293 10.9576 19.816 10.771 19.424 10.3976C19.032 10.015 18.7707 9.53429 18.64 8.95563L18.864 8.61963V13.7576H16.484ZM20.152 9.20763C20.5627 9.20763 20.8847 9.05829 21.118 8.75963C21.3513 8.45163 21.468 7.97096 21.468 7.31763C21.468 6.66429 21.3513 6.18829 21.118 5.88963C20.894 5.58163 20.5767 5.42763 20.166 5.42763C19.9047 5.42763 19.676 5.50229 19.48 5.65163C19.284 5.79163 19.13 6.00163 19.018 6.28163C18.9153 6.56163 18.864 6.90696 18.864 7.31763C18.864 7.70963 18.9107 8.05029 19.004 8.33963C19.1067 8.61963 19.256 8.83429 19.452 8.98363C19.648 9.13296 19.8813 9.20763 20.152 9.20763ZM28.1173 10.9576C27.3427 10.9576 26.6707 10.813 26.1013 10.5236C25.5413 10.2343 25.1073 9.81896 24.7993 9.27763C24.4913 8.73629 24.3373 8.08296 24.3373 7.31763C24.3373 6.55229 24.4913 5.89896 24.7993 5.35763C25.1073 4.81629 25.5367 4.40096 26.0873 4.11163C26.6473 3.82229 27.2867 3.67763 28.0053 3.67763C28.7427 3.67763 29.368 3.82229 29.8813 4.11163C30.404 4.39163 30.8007 4.78363 31.0713 5.28763C31.342 5.78229 31.4773 6.35163 31.4773 6.99563C31.4773 7.16363 31.4727 7.33163 31.4633 7.49963C31.454 7.66763 31.44 7.80763 31.4213 7.91963H25.8773V6.64563H30.3713L29.2373 7.07963C29.2373 6.51963 29.1347 6.09029 28.9293 5.79163C28.7333 5.49296 28.4253 5.34363 28.0053 5.34363C27.7067 5.34363 27.45 5.41363 27.2353 5.55363C27.03 5.69363 26.8713 5.91296 26.7593 6.21163C26.6567 6.51029 26.6053 6.89296 26.6053 7.35963C26.6053 7.81696 26.666 8.19029 26.7873 8.47963C26.9087 8.75963 27.0813 8.96496 27.3053 9.09563C27.5293 9.21696 27.8 9.27763 28.1173 9.27763C28.472 9.27763 28.752 9.20763 28.9573 9.06763C29.172 8.92763 29.3307 8.73163 29.4333 8.47963L31.3373 9.10963C31.2067 9.51096 30.978 9.85163 30.6513 10.1316C30.334 10.4023 29.9513 10.6076 29.5033 10.7476C29.0647 10.8876 28.6027 10.9576 28.1173 10.9576ZM32.2488 10.8176V3.81763H34.3488L34.4468 5.32963C34.6241 4.80696 34.8854 4.40096 35.2308 4.11163C35.5854 3.82229 36.0334 3.67763 36.5748 3.67763C36.7521 3.67763 36.9014 3.69163 37.0228 3.71963C37.1534 3.74763 37.2561 3.78496 37.3308 3.83163L37.0928 5.79163C36.9994 5.75429 36.8781 5.72629 36.7288 5.70763C36.5888 5.67963 36.4161 5.66563 36.2108 5.66563C35.9308 5.66563 35.6694 5.72629 35.4268 5.84763C35.1841 5.96896 34.9881 6.15096 34.8388 6.39363C34.6988 6.62696 34.6288 6.92563 34.6288 7.28963V10.8176H32.2488ZM37.7044 10.8176V3.81763H39.8324L39.9584 6.22563L39.6924 5.95963C39.7857 5.45563 39.9491 5.03563 40.1824 4.69963C40.4251 4.36363 40.7237 4.11163 41.0784 3.94363C41.4424 3.76629 41.8484 3.67763 42.2964 3.67763C42.7817 3.67763 43.2017 3.77096 43.5564 3.95763C43.9204 4.14429 44.2051 4.41963 44.4104 4.78363C44.6157 5.14763 44.7184 5.60496 44.7184 6.15563V10.8176H42.3384V6.78563C42.3384 6.30029 42.2451 5.96429 42.0584 5.77763C41.8717 5.59096 41.6337 5.49763 41.3444 5.49763C41.1204 5.49763 40.9104 5.55363 40.7144 5.66563C40.5184 5.76829 40.3644 5.93629 40.2524 6.16963C40.1404 6.40296 40.0844 6.71563 40.0844 7.10763V10.8176H37.7044ZM49.242 10.9576C48.4674 10.9576 47.7954 10.813 47.226 10.5236C46.666 10.2343 46.232 9.81896 45.924 9.27763C45.616 8.73629 45.462 8.08296 45.462 7.31763C45.462 6.55229 45.616 5.89896 45.924 5.35763C46.232 4.81629 46.6614 4.40096 47.212 4.11163C47.772 3.82229 48.4114 3.67763 49.13 3.67763C49.8674 3.67763 50.4927 3.82229 51.006 4.11163C51.5287 4.39163 51.9254 4.78363 52.196 5.28763C52.4667 5.78229 52.602 6.35163 52.602 6.99563C52.602 7.16363 52.5974 7.33163 52.588 7.49963C52.5787 7.66763 52.5647 7.80763 52.546 7.91963H47.002V6.64563H51.496L50.362 7.07963C50.362 6.51963 50.2594 6.09029 50.054 5.79163C49.858 5.49296 49.55 5.34363 49.13 5.34363C48.8314 5.34363 48.5747 5.41363 48.36 5.55363C48.1547 5.69363 47.996 5.91296 47.884 6.21163C47.7814 6.51029 47.73 6.89296 47.73 7.35963C47.73 7.81696 47.7907 8.19029 47.912 8.47963C48.0334 8.75963 48.206 8.96496 48.43 9.09563C48.654 9.21696 48.9247 9.27763 49.242 9.27763C49.5967 9.27763 49.8767 9.20763 50.082 9.06763C50.2967 8.92763 50.4554 8.73163 50.558 8.47963L52.462 9.10963C52.3314 9.51096 52.1027 9.85163 51.776 10.1316C51.4587 10.4023 51.076 10.6076 50.628 10.7476C50.1894 10.8876 49.7274 10.9576 49.242 10.9576ZM56.3135 10.9576C55.6135 10.9576 54.9601 10.8456 54.3535 10.6216C53.7561 10.3883 53.2615 10.057 52.8695 9.62763L53.9895 8.31163C54.2228 8.61029 54.5308 8.86229 54.9135 9.06763C55.3055 9.26363 55.7395 9.36163 56.2155 9.36163C56.5048 9.36163 56.7428 9.31963 56.9295 9.23563C57.1161 9.15163 57.2095 9.02096 57.2095 8.84363C57.2095 8.71296 57.1628 8.61029 57.0695 8.53563C56.9761 8.45163 56.7895 8.38163 56.5095 8.32563L55.5295 8.12963C54.6521 7.95229 54.0268 7.69096 53.6535 7.34563C53.2895 6.99096 53.1075 6.52896 53.1075 5.95963C53.1075 5.57696 53.2241 5.21296 53.4575 4.86763C53.6908 4.51296 54.0501 4.22829 54.5355 4.01363C55.0208 3.78963 55.6415 3.67763 56.3975 3.67763C57.1068 3.67763 57.7321 3.78029 58.2735 3.98563C58.8148 4.19096 59.2441 4.48963 59.5615 4.88163L58.4275 6.16963C58.2035 5.88963 57.9141 5.67029 57.5595 5.51163C57.2048 5.35296 56.8501 5.27363 56.4955 5.27363C56.2715 5.27363 56.0801 5.29696 55.9215 5.34363C55.7721 5.38096 55.6601 5.43696 55.5855 5.51163C55.5108 5.58629 55.4735 5.67963 55.4735 5.79163C55.4735 5.91296 55.5295 6.02029 55.6415 6.11363C55.7628 6.19763 55.9821 6.27229 56.2995 6.33763L57.5735 6.58963C58.2921 6.72029 58.8101 6.95829 59.1275 7.30363C59.4448 7.64896 59.6035 8.06429 59.6035 8.54963C59.6035 9.00696 59.4821 9.41763 59.2395 9.78163C58.9968 10.1456 58.6328 10.435 58.1475 10.6496C57.6621 10.855 57.0508 10.9576 56.3135 10.9576ZM63.2043 1.59163V8.32563C63.2043 8.66163 63.2836 8.90429 63.4423 9.05363C63.6103 9.19363 63.839 9.26363 64.1283 9.26363C64.3523 9.26363 64.5436 9.24029 64.7023 9.19363C64.8703 9.13763 65.0196 9.05829 65.1503 8.95563L65.4023 10.4256C65.169 10.5936 64.875 10.7243 64.5203 10.8176C64.1656 10.911 63.8016 10.9576 63.4283 10.9576C62.8963 10.9576 62.4343 10.883 62.0423 10.7336C61.6596 10.5843 61.361 10.3463 61.1463 10.0196C60.941 9.69296 60.8336 9.25896 60.8243 8.71763V2.24963L63.2043 1.59163ZM65.2903 3.81763V5.51163H59.6203V3.81763H65.2903Z" fill="black"/>
                        <path d="M66.8376 9.13763C67.1083 9.13763 67.3276 9.22163 67.4956 9.38963C67.6636 9.55763 67.7476 9.77696 67.7476 10.0476C67.7476 10.3183 67.6636 10.5376 67.4956 10.7056C67.3276 10.8736 67.1083 10.9576 66.8376 10.9576C66.567 10.9576 66.3476 10.8736 66.1796 10.7056C66.0116 10.5376 65.9276 10.3183 65.9276 10.0476C65.9276 9.77696 66.0116 9.55763 66.1796 9.38963C66.3476 9.22163 66.567 9.13763 66.8376 9.13763ZM74.0844 6.29563C74.0844 5.77296 73.9444 5.37163 73.6644 5.09163C73.3844 4.80229 72.9877 4.65763 72.4744 4.65763C71.989 4.65763 71.5784 4.76496 71.2424 4.97963C70.9064 5.18496 70.659 5.52096 70.5004 5.98763L69.5904 5.42763C69.777 4.90496 70.1224 4.48496 70.6264 4.16763C71.1304 3.84096 71.7557 3.67763 72.5024 3.67763C73.0064 3.67763 73.4637 3.76629 73.8744 3.94363C74.285 4.11163 74.607 4.37296 74.8404 4.72763C75.083 5.07296 75.2044 5.52096 75.2044 6.07163V9.45963C75.2044 9.79563 75.3817 9.96363 75.7364 9.96363C75.9137 9.96363 76.0864 9.94029 76.2544 9.89363L76.1984 10.7756C76.0117 10.869 75.769 10.9156 75.4704 10.9156C75.1997 10.9156 74.957 10.8643 74.7424 10.7616C74.5277 10.659 74.3597 10.505 74.2384 10.2996C74.117 10.085 74.0564 9.81896 74.0564 9.50163V9.36163L74.3364 9.40363C74.2244 9.76763 74.033 10.0663 73.7624 10.2996C73.4917 10.5236 73.1884 10.6916 72.8524 10.8036C72.5164 10.9063 72.185 10.9576 71.8584 10.9576C71.4477 10.9576 71.065 10.8876 70.7104 10.7476C70.3557 10.6076 70.071 10.3976 69.8564 10.1176C69.651 9.82829 69.5484 9.47363 69.5484 9.05363C69.5484 8.53096 69.721 8.10163 70.0664 7.76563C70.421 7.42029 70.911 7.18696 71.5364 7.06563L74.3084 6.51963V7.44363L72.0544 7.90563C71.597 7.99896 71.2564 8.12963 71.0324 8.29763C70.8084 8.46563 70.6964 8.69896 70.6964 8.99763C70.6964 9.28696 70.8084 9.52496 71.0324 9.71163C71.2657 9.88896 71.5924 9.97763 72.0124 9.97763C72.283 9.97763 72.5397 9.94496 72.7824 9.87963C73.0344 9.80496 73.2584 9.69763 73.4544 9.55763C73.6504 9.40829 73.8044 9.22629 73.9164 9.01163C74.0284 8.78763 74.0844 8.52629 74.0844 8.22763V6.29563ZM78.4861 2.47363C78.2341 2.47363 78.0287 2.39896 77.8701 2.24963C77.7207 2.09096 77.6461 1.88563 77.6461 1.63363C77.6461 1.38163 77.7207 1.18096 77.8701 1.03163C78.0287 0.87296 78.2341 0.793627 78.4861 0.793627C78.7381 0.793627 78.9387 0.87296 79.0881 1.03163C79.2467 1.18096 79.3261 1.38163 79.3261 1.63363C79.3261 1.88563 79.2467 2.09096 79.0881 2.24963C78.9387 2.39896 78.7381 2.47363 78.4861 2.47363ZM79.0461 3.81763V10.8176H77.9261V3.81763H79.0461Z" fill="black" fill-opacity="0.4"/>
                    </svg>
                </div>
            </div>
          {/* Close button */}
            <button className="close-btn" onClick={closeModal}>✖</button>
        </div>
        <h2>
          <strong>Verify OTP</strong>
          <br />
          <span className="light-text">
            OTP has been sent to {phoneNumber}
                    &nbsp;<span className='change-phone' onClick={openLoginModal}>Change?</span>
          </span>
        </h2>
        <div className="otp-input-container">
            {otp.map((digit, index) => (
                <input
                    key={index}
                    type="text"
                    value={digit}
                    ref={inputRefs[index]}
                    onChange={(e) => handleOtpChange(e, index)}
                    maxLength="1"
                    className="otp-input"
                />
            ))}
        </div>
        <p className='resend-text'>
            <span 
                className='clickable-text'
                onClick={() =>{
                    handleResendOtp();
                    setErrorMessage('');
                }}> 
                    Resend OTP
            </span>
            &nbsp;if you haven't received it.
        </p>
        <button className='otp-btn' onClick={verifyOtp}>Verify OTP</button>
        {errorMessage && <p className='error-message'>{errorMessage}</p>}
      </div>
    </div>
    </div>
  );
}

export default OTPModal;