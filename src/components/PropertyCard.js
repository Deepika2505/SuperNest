import React, { useState } from "react";
import "./../styles/PropertyCard.css";


const PropertyCard = ({ property }) => {
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  const { images, name, location, area, price, gender, amenities, isTopRated } = property;

  const handleNextImage = () => {
    setCurrentImageIndex((prevIndex) =>
      prevIndex === images.length - 1 ? 0 : prevIndex + 1
    );
  };

  const handlePrevImage = () => {
    setCurrentImageIndex((prevIndex) =>
      prevIndex === 0 ? images.length - 1 : prevIndex - 1
    );
  };

  const displayedFeatures = amenities.slice(0, 3);
  const remaningFeatures = amenities.length - 3;

  return (
    <div className="property-card">
      <div className="property-images">
        <div className="image-container">
          <img
            src={images[currentImageIndex]}
            alt={`${name} - Image ${currentImageIndex + 1}`}
            className="property-image"
          />
          <button className="prev-button" onClick={handlePrevImage}>
            &lt;
          </button>
          <button className="next-button" onClick={handleNextImage}>
            &gt;
          </button>
        </div>
      </div>

      <div className="property-details">
        {isTopRated && <div className="top-rated">
            <svg width="94" height="24" viewBox="0 0 94 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="94" height="24" rx="4" fill="#1F70F5"/>
                <path d="M14.4503 13.1335L15.0337 11.2335L13.5003 10.0002H15.4003L16.0003 8.1335L16.6003 10.0002H18.5003L16.9503 11.2335L17.5337 13.1335L16.0003 11.9502L14.4503 13.1335ZM12.0003 19.3335V14.1835C11.5781 13.7168 11.2503 13.1835 11.017 12.5835C10.7837 11.9835 10.667 11.3446 10.667 10.6668C10.667 9.17794 11.1837 7.91683 12.217 6.8835C13.2503 5.85016 14.5114 5.3335 16.0003 5.3335C17.4892 5.3335 18.7503 5.85016 19.7837 6.8835C20.817 7.91683 21.3337 9.17794 21.3337 10.6668C21.3337 11.3446 21.217 11.9835 20.9837 12.5835C20.7503 13.1835 20.4225 13.7168 20.0003 14.1835V19.3335L16.0003 18.0002L12.0003 19.3335ZM16.0003 14.6668C17.1114 14.6668 18.0559 14.2779 18.8337 13.5002C19.6114 12.7224 20.0003 11.7779 20.0003 10.6668C20.0003 9.55572 19.6114 8.61127 18.8337 7.8335C18.0559 7.05572 17.1114 6.66683 16.0003 6.66683C14.8892 6.66683 13.9448 7.05572 13.167 7.8335C12.3892 8.61127 12.0003 9.55572 12.0003 10.6668C12.0003 11.7779 12.3892 12.7224 13.167 13.5002C13.9448 14.2779 14.8892 14.6668 16.0003 14.6668Z" fill="white"/>
                <path d="M35.068 8.08V9.184H32.356V16H31.072V9.184H28.36V8.08H35.068ZM37.5358 9.88C38.1198 9.88 38.6358 10.004 39.0838 10.252C39.5318 10.5 39.8798 10.86 40.1278 11.332C40.3838 11.796 40.5118 12.352 40.5118 13C40.5118 13.648 40.3838 14.208 40.1278 14.68C39.8798 15.144 39.5318 15.5 39.0838 15.748C38.6358 15.996 38.1198 16.12 37.5358 16.12C36.9518 16.12 36.4358 15.996 35.9878 15.748C35.5398 15.5 35.1878 15.144 34.9318 14.68C34.6758 14.208 34.5478 13.648 34.5478 13C34.5478 12.352 34.6758 11.796 34.9318 11.332C35.1878 10.86 35.5398 10.5 35.9878 10.252C36.4358 10.004 36.9518 9.88 37.5358 9.88ZM37.5358 10.888C37.1758 10.888 36.8678 10.972 36.6118 11.14C36.3638 11.3 36.1718 11.536 36.0358 11.848C35.8998 12.16 35.8318 12.544 35.8318 13C35.8318 13.448 35.8998 13.832 36.0358 14.152C36.1718 14.464 36.3638 14.704 36.6118 14.872C36.8678 15.032 37.1758 15.112 37.5358 15.112C37.8958 15.112 38.1998 15.032 38.4478 14.872C38.6958 14.704 38.8878 14.464 39.0238 14.152C39.1598 13.832 39.2278 13.448 39.2278 13C39.2278 12.544 39.1598 12.16 39.0238 11.848C38.8878 11.536 38.6958 11.3 38.4478 11.14C38.1998 10.972 37.8958 10.888 37.5358 10.888ZM41.8871 18.52V10H43.0271L43.1231 11.68L42.9551 11.476C43.0511 11.164 43.1991 10.888 43.3991 10.648C43.5991 10.408 43.8471 10.22 44.1431 10.084C44.4471 9.948 44.7791 9.88 45.1391 9.88C45.6271 9.88 46.0711 10.004 46.4711 10.252C46.8711 10.5 47.1871 10.856 47.4191 11.32C47.6511 11.776 47.7671 12.332 47.7671 12.988C47.7671 13.644 47.6471 14.208 47.4071 14.68C47.1751 15.144 46.8551 15.5 46.4471 15.748C46.0471 15.996 45.5991 16.12 45.1031 16.12C44.5911 16.12 44.1551 15.988 43.7951 15.724C43.4351 15.452 43.1791 15.108 43.0271 14.692L43.1711 14.488V18.52H41.8871ZM44.8271 15.076C45.3471 15.076 45.7511 14.892 46.0391 14.524C46.3351 14.156 46.4831 13.648 46.4831 13C46.4831 12.352 46.3391 11.844 46.0511 11.476C45.7631 11.1 45.3631 10.912 44.8511 10.912C44.5151 10.912 44.2191 11 43.9631 11.176C43.7151 11.344 43.5191 11.584 43.3751 11.896C43.2391 12.2 43.1711 12.568 43.1711 13C43.1711 13.424 43.2391 13.792 43.3751 14.104C43.5111 14.416 43.7031 14.656 43.9511 14.824C44.1991 14.992 44.4911 15.076 44.8271 15.076ZM56.2409 8.08C57.0889 8.08 57.7609 8.292 58.2569 8.716C58.7609 9.14 59.0129 9.712 59.0129 10.432C59.0129 11.176 58.7609 11.752 58.2569 12.16C57.7609 12.56 57.0889 12.76 56.2409 12.76L56.1209 12.832H54.2849V16H53.0129V8.08H56.2409ZM56.1449 11.764C56.6649 11.764 57.0489 11.66 57.2969 11.452C57.5529 11.236 57.6809 10.908 57.6809 10.468C57.6809 10.036 57.5529 9.712 57.2969 9.496C57.0489 9.28 56.6649 9.172 56.1449 9.172H54.2849V11.764H56.1449ZM56.9009 12.028L59.4809 16H58.0049L55.7969 12.532L56.9009 12.028ZM64.1234 12.148C64.1234 11.748 64.0114 11.44 63.7874 11.224C63.5714 11 63.2714 10.888 62.8874 10.888C62.5274 10.888 62.2194 10.972 61.9634 11.14C61.7074 11.308 61.5194 11.58 61.3994 11.956L60.3194 11.5C60.4714 11.012 60.7674 10.62 61.2074 10.324C61.6554 10.028 62.2314 9.88 62.9354 9.88C63.4154 9.88 63.8394 9.96 64.2074 10.12C64.5754 10.272 64.8634 10.504 65.0714 10.816C65.2874 11.128 65.3954 11.528 65.3954 12.016V14.692C65.3954 14.988 65.5434 15.136 65.8394 15.136C65.9834 15.136 66.1234 15.116 66.2594 15.076L66.1874 15.964C66.0034 16.052 65.7714 16.096 65.4914 16.096C65.2354 16.096 65.0034 16.052 64.7954 15.964C64.5954 15.868 64.4354 15.728 64.3154 15.544C64.2034 15.352 64.1474 15.116 64.1474 14.836V14.752L64.4114 14.74C64.3394 15.052 64.1914 15.312 63.9674 15.52C63.7434 15.72 63.4834 15.872 63.1874 15.976C62.8914 16.072 62.5914 16.12 62.2874 16.12C61.9114 16.12 61.5714 16.06 61.2674 15.94C60.9714 15.82 60.7354 15.64 60.5594 15.4C60.3914 15.152 60.3074 14.848 60.3074 14.488C60.3074 14.04 60.4514 13.672 60.7394 13.384C61.0354 13.096 61.4514 12.9 61.9874 12.796L64.3154 12.34L64.3034 13.24L62.6114 13.588C62.2754 13.652 62.0234 13.744 61.8554 13.864C61.6874 13.984 61.6034 14.16 61.6034 14.392C61.6034 14.616 61.6874 14.796 61.8554 14.932C62.0314 15.06 62.2634 15.124 62.5514 15.124C62.7514 15.124 62.9434 15.1 63.1274 15.052C63.3194 15.004 63.4914 14.928 63.6434 14.824C63.7954 14.712 63.9114 14.572 63.9914 14.404C64.0794 14.228 64.1234 14.02 64.1234 13.78V12.148ZM68.7768 8.236V14.2C68.7768 14.496 68.8528 14.712 69.0048 14.848C69.1648 14.984 69.3768 15.052 69.6408 15.052C69.8568 15.052 70.0448 15.02 70.2048 14.956C70.3648 14.884 70.5128 14.788 70.6488 14.668L70.9368 15.604C70.7528 15.764 70.5248 15.892 70.2528 15.988C69.9888 16.076 69.6928 16.12 69.3648 16.12C69.0208 16.12 68.7048 16.064 68.4168 15.952C68.1288 15.84 67.9048 15.66 67.7448 15.412C67.5848 15.156 67.5008 14.824 67.4928 14.416V8.596L68.7768 8.236ZM70.8408 10V11.008H66.3408V10H70.8408ZM74.5107 16.12C73.9107 16.12 73.3827 15.996 72.9267 15.748C72.4707 15.5 72.1147 15.144 71.8587 14.68C71.6107 14.208 71.4867 13.648 71.4867 13C71.4867 12.352 71.6107 11.796 71.8587 11.332C72.1147 10.86 72.4667 10.5 72.9147 10.252C73.3627 10.004 73.8707 9.88 74.4387 9.88C75.0227 9.88 75.5187 10 75.9267 10.24C76.3347 10.48 76.6467 10.808 76.8627 11.224C77.0787 11.64 77.1867 12.112 77.1867 12.64C77.1867 12.784 77.1827 12.92 77.1747 13.048C77.1667 13.176 77.1547 13.288 77.1387 13.384H72.3147V12.4H76.5747L75.9387 12.592C75.9387 12.048 75.8027 11.632 75.5307 11.344C75.2587 11.048 74.8867 10.9 74.4147 10.9C74.0707 10.9 73.7707 10.98 73.5147 11.14C73.2587 11.3 73.0627 11.54 72.9267 11.86C72.7907 12.172 72.7227 12.556 72.7227 13.012C72.7227 13.46 72.7947 13.84 72.9387 14.152C73.0827 14.464 73.2867 14.7 73.5507 14.86C73.8147 15.02 74.1267 15.1 74.4867 15.1C74.8867 15.1 75.2107 15.024 75.4587 14.872C75.7067 14.72 75.9027 14.508 76.0467 14.236L77.0667 14.716C76.9227 15.004 76.7267 15.256 76.4787 15.472C76.2387 15.68 75.9507 15.84 75.6147 15.952C75.2787 16.064 74.9107 16.12 74.5107 16.12ZM80.8722 16.12C80.3762 16.12 79.9242 15.996 79.5162 15.748C79.1162 15.5 78.8002 15.144 78.5682 14.68C78.3362 14.216 78.2202 13.66 78.2202 13.012C78.2202 12.34 78.3442 11.772 78.5922 11.308C78.8402 10.844 79.1722 10.492 79.5882 10.252C80.0042 10.004 80.4602 9.88 80.9562 9.88C81.4682 9.88 81.9002 10.02 82.2522 10.3C82.6042 10.58 82.8402 10.944 82.9602 11.392L82.8162 11.524V7.3H84.1002V16H82.9602L82.8642 14.368L83.0322 14.38C82.9762 14.74 82.8442 15.052 82.6362 15.316C82.4282 15.572 82.1682 15.772 81.8562 15.916C81.5522 16.052 81.2242 16.12 80.8722 16.12ZM81.1482 15.088C81.4922 15.088 81.7882 15 82.0362 14.824C82.2842 14.648 82.4762 14.4 82.6122 14.08C82.7482 13.76 82.8162 13.376 82.8162 12.928C82.8162 12.512 82.7482 12.156 82.6122 11.86C82.4762 11.556 82.2842 11.324 82.0362 11.164C81.7962 11.004 81.5162 10.924 81.1962 10.924C80.6602 10.924 80.2442 11.108 79.9482 11.476C79.6522 11.844 79.5042 12.352 79.5042 13C79.5042 13.648 79.6482 14.16 79.9362 14.536C80.2242 14.904 80.6282 15.088 81.1482 15.088Z" fill="white"/>
            </svg>

            </div>}
        <h2 className="property-name">{name}</h2>
        <p className="property-location">{area}, {location}</p>
        <p className="property-cost">from â‚¹{price}/month</p>

        <div className="property-features">
          {displayedFeatures.map((feature, index) => (
            <div key={index} className="feature-box">
              {feature}
            </div>
          ))}
          {remaningFeatures>0 && (
            <div className="more-features">+{remaningFeatures} more</div>
          )}
        </div>
      </div>
    </div>
  );
};

export default PropertyCard;
